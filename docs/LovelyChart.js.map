{"version":3,"sources":["constants.js","TransitionManager.js","utils.js","formulas.js","StateManager.js","minifiers.js","toggleText.js","Header.js","format.js","skin.js","Projection.js","Axes.js","canvas.js","preparePoints.js","simplify.js","drawDatasets.js","captureEvents.js","Minimap.js","Tooltip.js","Tools.js","data.js","Zoomer.js","hideOnScroll.js","LovelyChart.js"],"names":["DPR","window","devicePixelRatio","DEFAULT_RANGE","begin","end","TRANSITION_DEFAULT_DURATION","LONG_PRESS_TIMEOUT","GUTTER","PLOT_HEIGHT","PLOT_TOP_PADDING","PLOT_LINE_WIDTH","PLOT_PIE_RADIUS_FACTOR","PLOT_PIE_SHIFT","PLOT_BARS_WIDTH_SHIFT","BALLOON_OFFSET","AXES_FONT","AXES_MAX_COLUMN_WIDTH","AXES_MAX_ROW_HEIGHT","X_AXIS_HEIGHT","X_AXIS_SHIFT_START","Y_AXIS_ZERO_BASED_THRESHOLD","MINIMAP_HEIGHT","MINIMAP_MARGIN","MINIMAP_LINE_WIDTH","MINIMAP_EAR_WIDTH","MINIMAP_MAX_ANIMATED_DATASETS","ZOOM_TIMEOUT","ZOOM_RANGE_DELTA","ZOOM_RANGE_MIDDLE","MONTHS","MONTHS_SHORT","WEEK_DAYS","WEEK_DAYS_SHORT","MILISECONDS_IN_DAY","SPEED_TEST_INTERVAL","SPEED_TEST_FAST_FPS","SIMPLIFIER_MIN_POINTS","SIMPLIFIER_PLOT_FACTOR","SIMPLIFIER_MINIMAP_FACTOR","ANIMATE_PROPS","transition","t","Math","pow","createTransitionManager","onTick","_transitions","_nextFrame","_testStartedAt","_fps","_testingFps","_slowDetectedAt","_startedAsSlow","remove","prop","isRunning","cancelAnimationFrame","Boolean","Object","keys","length","isFast","forceCheck","_tick","isSlow","Date","now","state","forEach","startedAt","from","to","duration","options","progress","min","current","includes","ceil","floor","requestAnimationFrame","add","get","getState","getMaxMin","array","max","i","value","mergeArrays","arrays","concat","apply","sumArrays","sums","n","l","j","proxyMerge","obj1","obj2","Proxy","obj","undefined","throttle","fn","ms","shouldRunFirst","args","isPending","shouldRunLast","waiting","_args","setTimeout","throttleWithRaf","debounce","waitingTimeout","clearTimeout","xScaleLevelToStep","scaleLevel","xStepToScaleLevel","step","log2","SCALE_LEVELS","yScaleLevelToStep","yStepToScaleLevel","neededStep","findIndex","applyYEdgeOpacity","opacity","xPx","plotWidth","edgeOffset","applyXEdgeOpacity","yPx","getPieRadius","projection","getSize","getPieTextSize","percent","radius","getPieTextShift","shift","log","isDataRange","labelFrom","labelTo","abs","getSimplificationDelta","pointsLength","createStateManager","data","viewportSize","callback","_range","filter","transitionConfig","datasetVisibilities","_filter","datasets","key","_transitionConfig","map","split","push","_runCallback","_runCallbackOnRaf","_state","static","update","range","focusOn","minimapDelta","noTransition","assign","prevState","calculateState","currentTarget","hasAnimations","totalXWidth","xLabels","labelFromIndex","labelToIndex","xAxisScale","calculateXAxisScale","width","yRanges","isStacked","calculateYRangesStacked","calculateYRanges","yAxisScale","calculateYAxisScale","height","yMinViewport","yMaxViewport","yAxisScaleSecond","hasSecondYAxis","yMinViewportSecond","yMaxViewportSecond","yStep","yStepSecond","datasetsOpacity","secondaryYAxisDataset","slice","filteredDatasets","d","calculateYRangesForGroup","group","yMinMinimapSecond","yMinMinimap","yMaxMinimapSecond","yMaxMinimap","yMax","yMin","yMinMinimapReal","filteredValues","viewportValues","values","viewportMaxMin","yMinViewportReal","viewportLabelsCount","maxColumns","plotHeight","availableHeight","maxRows","createElement","tagName","document","addEventListener","element","event","cb","removeEventListener","toggleText","newText","className","inverse","container","parentNode","classList","newElement","innerHTML","selector","join","querySelectorAll","e","insertBefore","nextSibling","toggleElementIn","toggleElementOut","createHeader","title","zoomOutCallback","_element","_titleElement","_zoomOutElement","_captionElement","setCaptionThrottled","setCaption","caption","_onZoomOut","appendChild","zoom","buildDayLabels","labels","date","day","getDate","month","getMonth","text","buildTimeLabels","hours","getUTCHours","minutes","getUTCMinutes","buildTextLabels","humanize","decimals","keepThreeDigits","toFixed","replace","formatInteger","String","getFullLabelDate","label","isShort","getLabelDate","displayWeekDay","displayYear","displayHours","monthsArray","weekDaysArray","string","getUTCDate","getUTCMonth","getUTCDay","getUTCFullYear","detectSkin","documentElement","contains","skin","COLORS","styleElement","type","createTextNode","head","styleSheet","sheet","createColors","datasetColors","colors","baseClass","hexToChannels","addCssRule","getCssColor","buildCssColor","hexWithAlpha","hex","alpha","parseInt","parseFloat","r","g","b","a","rule","insertRule","cssRules","createProjection","params","availableWidth","xPadding","yPadding","effectiveWidth","xFactor","xOffsetPx","effectiveHeight","yFactor","yOffsetPx","findClosestLabelIndex","round","copy","overrides","cons","getCenter","getParams","toPixels","labelIndex","createAxes","context","plotSize","_drawYAxisScaled","colorKey","isSecondary","firstVisibleValue","lastVisibleValue","font","textAlign","textBaseline","lineWidth","beginPath","textOpacity","fillStyle","fillText","strokeStyle","moveTo","lineTo","stroke","drawXAxis","clearRect","topOffset","opacityFactor","shiftedI","drawYAxis","secondaryProjection","yAxisScaleFrom","yAxisScaleTo","yAxisScaleProgress","yMinViewportFrom","yMinViewportTo","yMaxViewportFrom","yMaxViewportTo","yMinViewportSecondFrom","yMinViewportSecondTo","yMaxViewportSecondFrom","yMaxViewportSecondTo","isYChanging","isPercentage","_drawYAxisPercents","percentValues","yAxisScaleSecondFrom","yAxisScaleSecondTo","yAxisScaleSecondProgress","secondaryColorKey","setupCanvas","canvas","style","getContext","scale","clearCanvas","preparePoints","visibilities","bounds","pieToArea","isPie","prepareSumsByX","points","datasetValues","visibleValue","stackOffset","stackValue","preparePercentage","prepareStacked","getSumsByY","datasetPoints","sumsByY","point","accum","reduce","sum","simplify","E1","MAXLIMIT","pointToSegmentDistanceSquare","p","v1","v2","dv","dvlen_1","vx","vy","indexes","fixedPoints","removed","worker","precalculate","len","maximumDelta","distances","queue","subdivisionTree","tick","request","pop","result","start","record","currentLimit","usedDistance","usedIndex","vector","fixId","vectorLength","vectorLength_1","segmentDistance","index","distance","left","parent","parentProperty","right","delta","resultIndexes","delta2","markers","drawDatasets","secondaryPoints","pieToBar","simplification","hasOwnYAxis","color","datasetType","datasetProjection","yHeight","bottomLine","topLine","center","pointerVector","x0","x1","drawDataset","isBars","drawBarsMask","drawDatasetLine","drawDatasetBars","drawDatasetArea","drawDatasetPie","pixels","simplifierFn","x","y","save","globalAlpha","lineJoin","lineCap","restore","yFrom","yTo","rectX","rectY","rectW","rectH","fillRect","xCenter","yCenter","fill","percentFactor","beginAngle","PI","endAngle","angle","shiftAngle","directionX","cos","directionY","sin","shiftX","shiftY","arc","textShift","captureEvents","captureEvent","longPressTimeout","onCapture","onMove","onRelease","pageX","touches","draggingCursor","onLongPress","onDrag","dragOffsetX","createMinimap","rangeCallback","_canvas","_context","_canvasSize","_ruler","_slider","_capturedOffset","_updateRulerOnRaf","_updateRuler","children","_onDragCapture","preventDefault","target","offsetLeft","_onDragRelease","_onSliderDrag","moveEvent","maxX1","offsetWidth","newX1","newX2","_updateRange","_onLeftEarDrag","_onRightEarDrag","minX2","maxX2","isExternal","nextRange","_adjustDiscreteRange","offsetHeight","newState","_isStateChanged","some","_drawDatasets","boundsAndParams","secondaryDataset","find","totalPoints","toggle","shouldShow","createTooltip","onZoom","onFocus","_points","_projection","_secondaryPoints","_secondaryProjection","_balloon","_offsetX","_offsetY","_clickedOnLabel","_isZoomed","_isZooming","_selectLabelOnRaf","_selectLabel","_throttledUpdateContent","_updateContent","_onMouseMove","pageOffset","getBoundingClientRect","clientX","clientY","top","_onDocumentMove","_clear","_onClick","oldLabelIndex","newLabelIndex","_getLabelIndex","_onBalloonClick","_hideBalloon","getPointerVector","shouldShowBalloon","statistics","name","getValue","originalIndex","_updateBalloon","transform","_getBalloonLeftOffset","meanLabel","shouldPlaceRight","_getBalloonTopOffset","_getTitle","labelType","isLines","isAreas","_drawCircles","pointIndex","strokeColor","fillColor","_drawTail","_renderPercentageValue","dataSet","totalValue","Array","percentageValue","percentageElement","querySelector","newPercentageTitle","prepend","_updateDataSets","dataSetContainer","setAttribute","_isPieSectorSelected","offset","statItem","currentDataSet","_updateDataSet","_insertNewDataSet","newDataSet","totalText","_renderTotal","valueElement","newTotalText","_updateTitle","titleContainer","display","currentTitle","atan2","sqrt","_setupLayout","isZoomable","_setupCanvas","toggleLoading","isLoading","toggleIsZoomed","isZoomed","createTools","filterCallback","control","href","dataset","clickPrevented","_updateFilter","button","isLongPress","buttons","getElementsByTagName","isSingleChecked","input","redraw","oldElement","removeChild","analyzeData","prepareDatasets","totalYMin","Infinity","totalYMax","analyzed","shouldZoomToPie","cloneArray","createZoomer","overviewData","stateManager","header","minimap","tooltip","tools","_stateBeforeZoomIn","_stateBeforeZoomOut","_replaceData","newRawData","zoomInLabel","labelWidth","labelMiddle","newData","shouldZoomToLines","scrollWidth","scrollHeight","daysCount","halfDayWidth","zoomIn","Promise","resolve","_generatePieData","then","zoomOut","hideOnScroll","chartEls","showAllDebounced","showAll","chartEl","hideScrolledDebounced","hideScrolled","bottom","shouldHide","innerHeight","setup","onscroll","create","originalData","_stateManager","_plot","_plotSize","_header","_axes","_minimap","_tooltip","_tools","_zoomer","_windowWidth","innerWidth","_data","_colors","_redrawDebounced","_redraw","_setupComponents","_setupPlotCanvas","clientWidth","_onStateUpdate","_onRangeChange","_onZoomIn","_onFocus","_onFilterChange","_getCaption","startIndex","endIndex"],"mappings":"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","file":"LovelyChart.js","sourceRoot":"../src","sourcesContent":["export const DPR = window.devicePixelRatio || 1;\n\nexport const DEFAULT_RANGE = { begin: 0.8, end: 1 };\nexport const TRANSITION_DEFAULT_DURATION = 300;\nexport const LONG_PRESS_TIMEOUT = 500;\n\nexport const GUTTER = 10;\nexport const PLOT_HEIGHT = 320;\nexport const PLOT_TOP_PADDING = 15;\nexport const PLOT_LINE_WIDTH = 2;\nexport const PLOT_PIE_RADIUS_FACTOR = 0.9 / 2;\nexport const PLOT_PIE_SHIFT = 10;\nexport const PLOT_BARS_WIDTH_SHIFT = 0.5;\n\nexport const BALLOON_OFFSET = 20;\n\nexport const AXES_FONT = '300 10px Helvetica, Arial, sans-serif';\nexport const AXES_MAX_COLUMN_WIDTH = 45;\nexport const AXES_MAX_ROW_HEIGHT = 50;\nexport const X_AXIS_HEIGHT = 30;\nexport const X_AXIS_SHIFT_START = 1;\nexport const Y_AXIS_ZERO_BASED_THRESHOLD = 0.1;\n\nexport const MINIMAP_HEIGHT = 40;\nexport const MINIMAP_MARGIN = 10;\nexport const MINIMAP_LINE_WIDTH = 1;\nexport const MINIMAP_EAR_WIDTH = 8;\nexport const MINIMAP_MAX_ANIMATED_DATASETS = 4;\n\nexport const ZOOM_TIMEOUT = TRANSITION_DEFAULT_DURATION;\nexport const ZOOM_RANGE_DELTA = 0.1;\nexport const ZOOM_RANGE_MIDDLE = .5;\n\nexport const MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\nexport const MONTHS_SHORT = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\nexport const WEEK_DAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\nexport const WEEK_DAYS_SHORT = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\nexport const MILISECONDS_IN_DAY = 24 * 60 * 60 * 1000;\n\nexport const SPEED_TEST_INTERVAL = 200;\nexport const SPEED_TEST_FAST_FPS = 4;\n\nexport const SIMPLIFIER_MIN_POINTS = 1000;\nexport const SIMPLIFIER_PLOT_FACTOR = 1;\nexport const SIMPLIFIER_MINIMAP_FACTOR = 0.5;\n\nexport const ANIMATE_PROPS = [\n  // Viewport X-axis\n  'begin 200 fast', 'end 200 fast', 'labelFromIndex 200 fast floor', 'labelToIndex 200 fast ceil',\n\n  // X-axis labels\n  'xAxisScale 400',\n\n  // Viewport Y-axis\n  'yMinViewport', 'yMaxViewport', 'yMinViewportSecond', 'yMaxViewportSecond',\n\n  // Minimap Y-axis\n  'yMinMinimap', 'yMaxMinimap', 'yMinMinimapSecond', 'yMaxMinimapSecond',\n\n  // Y-axis labels\n  'yAxisScale', 'yAxisScaleSecond',\n];\n","import { SPEED_TEST_FAST_FPS, SPEED_TEST_INTERVAL, TRANSITION_DEFAULT_DURATION } from './constants';\n\nfunction transition(t) {\n  // faster\n  // return -t * (t - 2);\n  // easeOut\n  return 1 - Math.pow(1 - t, 1.675);\n}\n\nexport function createTransitionManager(onTick) {\n  const _transitions = {};\n\n  let _nextFrame = null;\n\n  let _testStartedAt = null;\n  let _fps = null;\n  let _testingFps = null;\n  let _slowDetectedAt = null;\n  let _startedAsSlow = null;\n\n  function add(prop, from, to, duration, options) {\n    _transitions[prop] = {\n      from,\n      to,\n      duration,\n      options,\n      current: from,\n      startedAt: Date.now(),\n      progress: 0,\n    };\n\n    if (!_nextFrame) {\n      _resetSpeedTest();\n      _nextFrame = requestAnimationFrame(_tick);\n    }\n  }\n\n  function remove(prop) {\n    delete _transitions[prop];\n\n    if (!isRunning()) {\n      cancelAnimationFrame(_nextFrame);\n      _nextFrame = null;\n    }\n  }\n\n  function get(prop) {\n    return _transitions[prop];\n  }\n\n  function getState() {\n    const state = {};\n\n    Object.keys(_transitions).forEach((prop) => {\n      const { current, from, to, progress } = _transitions[prop];\n      state[prop] = current;\n      // TODO perf lazy\n      state[`${prop}From`] = from;\n      state[`${prop}To`] = to;\n      state[`${prop}Progress`] = progress;\n    });\n\n    return state;\n  }\n\n  function isRunning() {\n    return Boolean(Object.keys(_transitions).length);\n  }\n\n  function isFast(forceCheck) {\n    if (!forceCheck && (_startedAsSlow || _slowDetectedAt)) {\n      return false;\n    }\n\n    return _fps === null || _fps >= SPEED_TEST_FAST_FPS;\n  }\n\n  function _tick() {\n    const isSlow = !isFast();\n    _speedTest();\n\n    const state = {};\n\n    Object.keys(_transitions).forEach((prop) => {\n      const { startedAt, from, to, duration = TRANSITION_DEFAULT_DURATION, options } = _transitions[prop];\n      const progress = Math.min(1, (Date.now() - startedAt) / duration);\n      let current = from + (to - from) * transition(progress);\n\n      if (options.includes('ceil')) {\n        current = Math.ceil(current);\n      } else if (options.includes('floor')) {\n        current = Math.floor(current);\n      }\n\n      _transitions[prop].current = current;\n      _transitions[prop].progress = progress;\n      state[prop] = current;\n\n      if (progress === 1) {\n        remove(prop);\n      }\n    });\n\n    if (!isSlow) {\n      onTick(state);\n    }\n\n    if (isRunning()) {\n      _nextFrame = requestAnimationFrame(_tick);\n    }\n  }\n\n  function _resetSpeedTest() {\n    _testStartedAt = null;\n    _testingFps = null;\n    if (_slowDetectedAt && Date.now() - _slowDetectedAt > 5000) {\n      _slowDetectedAt = null;\n    }\n    _startedAsSlow = Boolean(_slowDetectedAt) || !isFast(true);\n  }\n\n  function _speedTest() {\n    if (!_testStartedAt || (Date.now() - _testStartedAt) >= SPEED_TEST_INTERVAL) {\n      if (_testingFps) {\n        _fps = _testingFps;\n        if (!_slowDetectedAt && !isFast(true)) {\n          _slowDetectedAt = Date.now();\n        }\n      }\n      _testStartedAt = Date.now();\n      _testingFps = 0;\n    } else {\n      _testingFps++;\n    }\n  }\n\n  return { add, remove, get, getState, isRunning, isFast };\n}\n","// https://jsperf.com/finding-maximum-element-in-an-array\nexport function getMaxMin(array) {\n  const length = array.length;\n  let max = array[0];\n  let min = array[0];\n\n  for (let i = 0; i < length; i++) {\n    const value = array[i];\n\n    if (value > max) {\n      max = value;\n    } else if (value < min) {\n      min = value;\n    }\n  }\n\n  return { max, min };\n}\n\n// https://jsperf.com/multi-array-concat/24\nexport function mergeArrays(arrays) {\n  return [].concat.apply([], arrays);\n}\n\nexport function sumArrays(arrays) {\n  const sums = [];\n  const n = arrays.length;\n\n  for (let i = 0, l = arrays[0].length; i < l; i++) {\n    sums[i] = 0;\n\n    for (let j = 0; j < n; j++) {\n      sums[i] += arrays[j][i];\n    }\n  }\n\n  return sums;\n}\n\nexport function proxyMerge(obj1, obj2) {\n  return new Proxy({}, {\n    get: (obj, prop) => {\n      if (obj[prop] !== undefined) {\n        return obj[prop];\n      } else if (obj2[prop] !== undefined) {\n        return obj2[prop];\n      } else {\n        return obj1[prop];\n      }\n    },\n  });\n}\n\nexport function throttle(fn, ms, shouldRunFirst = true, shouldRunLast = true) {\n  let waiting = false;\n  let args;\n  let isPending;\n\n  return function (..._args) {\n    args = _args;\n    isPending = true;\n\n    if (!waiting) {\n      if (shouldRunFirst) {\n        isPending = false;\n        fn(...args);\n      }\n\n      waiting = true;\n\n      setTimeout(() => {\n        waiting = false;\n\n        if (shouldRunLast && isPending) {\n          fn(...args);\n        }\n      }, ms);\n    }\n  };\n}\n\nexport function throttleWithRaf(fn) {\n  let waiting = false;\n  let args;\n\n  return function (..._args) {\n    args = _args;\n\n    if (!waiting) {\n      waiting = true;\n\n      requestAnimationFrame(() => {\n        waiting = false;\n        fn(...args);\n      });\n    }\n  };\n}\n\nexport function debounce(fn, ms, shouldRunFirst = true, shouldRunLast = true) {\n  let waitingTimeout = null;\n\n  return function () {\n    if (waitingTimeout) {\n      clearTimeout(waitingTimeout);\n      waitingTimeout = null;\n    } else if (shouldRunFirst) {\n      fn();\n    }\n\n    waitingTimeout = setTimeout(() => {\n      if (shouldRunLast) {\n        fn();\n      }\n\n      waitingTimeout = null;\n    }, ms);\n  };\n}\n","import { GUTTER, PLOT_PIE_RADIUS_FACTOR, MILISECONDS_IN_DAY, SIMPLIFIER_MIN_POINTS } from './constants';\n\nexport function xScaleLevelToStep(scaleLevel) {\n  return Math.pow(2, scaleLevel);\n}\n\nexport function xStepToScaleLevel(step) {\n  return Math.ceil(Math.log2(step || 1));\n}\n\nconst SCALE_LEVELS = [\n  1, 2, 8, 18, 50, 100, 250, 500, 1000, 2500, 5000, 10000, 25000, 50000, 100000,\n  250000, 500000, 1000000, 2500000, 5000000, 10000000, 25000000, 50000000, 100000000,\n];\n\nexport function yScaleLevelToStep(scaleLevel) {\n  return SCALE_LEVELS[scaleLevel] || SCALE_LEVELS[SCALE_LEVELS.length - 1];\n}\n\nexport function yStepToScaleLevel(neededStep) {\n  return SCALE_LEVELS.findIndex((step) => step >= neededStep) || SCALE_LEVELS.length - 1;\n}\n\nexport function applyYEdgeOpacity(opacity, xPx, plotWidth) {\n  const edgeOffset = Math.min(xPx + GUTTER, plotWidth - xPx);\n  if (edgeOffset <= GUTTER * 4) {\n    opacity = Math.min(1, opacity, edgeOffset / (GUTTER * 4));\n  }\n  return opacity;\n}\n\nexport function applyXEdgeOpacity(opacity, yPx) {\n  return (yPx - GUTTER <= GUTTER * 2)\n    ? Math.min(1, opacity, (yPx - GUTTER) / (GUTTER * 2))\n    : opacity;\n}\n\nexport function getPieRadius(projection) {\n  return Math.min(...projection.getSize()) * PLOT_PIE_RADIUS_FACTOR;\n}\n\nexport function getPieTextSize(percent, radius) {\n  return (radius + percent * 150) / 8;\n}\n\nexport function getPieTextShift(percent, radius, shift) {\n  return percent >= 0.99 ? 0 : Math.min(1 - Math.log(percent * 30) / 5, 4 / 5) * radius;\n}\n\nexport function isDataRange(labelFrom, labelTo) {\n  return Math.abs(labelTo.value - labelFrom.value) > MILISECONDS_IN_DAY;\n}\n\nexport function getSimplificationDelta(pointsLength) {\n  return pointsLength >= SIMPLIFIER_MIN_POINTS ? Math.min((pointsLength / 1000), 1) : 0;\n}\n","import { createTransitionManager } from './TransitionManager';\nimport { throttleWithRaf, getMaxMin, mergeArrays, proxyMerge, sumArrays } from './utils';\nimport {\n  AXES_MAX_COLUMN_WIDTH,\n  AXES_MAX_ROW_HEIGHT,\n  X_AXIS_HEIGHT,\n  ANIMATE_PROPS,\n  Y_AXIS_ZERO_BASED_THRESHOLD,\n} from './constants';\nimport { xStepToScaleLevel, yScaleLevelToStep, yStepToScaleLevel } from './formulas';\n\nexport function createStateManager(data, viewportSize, callback) {\n  const _range = { begin: 0, end: 1 };\n  const _filter = _buildDefaultFilter();\n  const _transitionConfig = _buildTransitionConfig();\n  const _transitions = createTransitionManager(_runCallback);\n  const _runCallbackOnRaf = throttleWithRaf(_runCallback);\n\n  let _state = {};\n\n  function update({ range = {}, filter = {}, focusOn, minimapDelta } = {}, noTransition) {\n    Object.assign(_range, range);\n    Object.assign(_filter, filter);\n\n    const prevState = _state;\n    _state = calculateState(data, viewportSize, _range, _filter, focusOn, minimapDelta, prevState);\n\n    if (!noTransition) {\n      _transitionConfig.forEach(({ prop, duration, options }) => {\n        const transition = _transitions.get(prop);\n        const currentTarget = transition ? transition.to : prevState[prop];\n\n        if (currentTarget !== undefined && currentTarget !== _state[prop]) {\n          const current = transition\n            ? (options.includes('fast') ? prevState[prop] : transition.current)\n            : prevState[prop];\n\n          if (transition) {\n            _transitions.remove(prop);\n          }\n\n          _transitions.add(prop, current, _state[prop], duration, options);\n        }\n      });\n    }\n\n    if (!_transitions.isRunning() || !_transitions.isFast()) {\n      _runCallbackOnRaf();\n    }\n  }\n\n  function hasAnimations() {\n    return _transitions.isFast();\n  }\n\n  function _buildTransitionConfig() {\n    const transitionConfig = [];\n    const datasetVisibilities = data.datasets.map(({ key }) => `opacity#${key} 300`);\n\n    mergeArrays([\n      ANIMATE_PROPS,\n      datasetVisibilities,\n    ]).forEach((transition) => {\n      const [prop, duration, ...options] = transition.split(' ');\n      transitionConfig.push({ prop, duration, options });\n    });\n\n    return transitionConfig;\n  }\n\n  function _buildDefaultFilter() {\n    const filter = {};\n\n    data.datasets.forEach(({ key }) => {\n      filter[key] = true;\n    });\n\n    return filter;\n  }\n\n  function _runCallback() {\n    const state = _transitions.isFast() ? proxyMerge(_state, _transitions.getState()) : _state;\n    state.static = _state;\n    callback(state);\n  }\n\n  return { update, hasAnimations };\n}\n\nfunction calculateState(data, viewportSize, range, filter, focusOn, minimapDelta, prevState) {\n  const { begin, end } = range;\n  const totalXWidth = data.xLabels.length - 1;\n\n  const labelFromIndex = Math.max(0, Math.ceil(totalXWidth * begin));\n  const labelToIndex = Math.min(Math.floor(totalXWidth * end), totalXWidth);\n\n  const xAxisScale = calculateXAxisScale(viewportSize.width, labelFromIndex, labelToIndex);\n\n  const yRanges = data.isStacked\n    ? calculateYRangesStacked(data, filter, labelFromIndex, labelToIndex, prevState)\n    : calculateYRanges(data, filter, labelFromIndex, labelToIndex, prevState);\n\n  const yAxisScale = calculateYAxisScale(viewportSize.height, yRanges.yMinViewport, yRanges.yMaxViewport);\n  const yAxisScaleSecond = data.hasSecondYAxis &&\n    calculateYAxisScale(viewportSize.height, yRanges.yMinViewportSecond, yRanges.yMaxViewportSecond);\n\n  const yStep = yScaleLevelToStep(yAxisScale);\n  yRanges.yMinViewport -= yRanges.yMinViewport % yStep;\n\n  if (yAxisScaleSecond) {\n    const yStepSecond = yScaleLevelToStep(yAxisScaleSecond);\n    yRanges.yMinViewportSecond -= yRanges.yMinViewportSecond % yStepSecond;\n  }\n\n  const datasetsOpacity = {};\n  data.datasets.forEach(({ key }) => {\n    datasetsOpacity[`opacity#${key}`] = filter[key] ? 1 : 0;\n  });\n\n  // TODO perf\n  return Object.assign(\n    {\n      totalXWidth,\n      xAxisScale,\n      yAxisScale,\n      yAxisScaleSecond,\n      labelFromIndex: Math.max(0, labelFromIndex - 1),\n      labelToIndex: Math.min(labelToIndex + 1, totalXWidth),\n      filter: Object.assign({}, filter),\n      focusOn: focusOn !== undefined ? focusOn : prevState.focusOn,\n      minimapDelta: minimapDelta !== undefined ? minimapDelta : prevState.minimapDelta,\n    },\n    yRanges,\n    datasetsOpacity,\n    range,\n  );\n}\n\nfunction calculateYRanges(data, filter, labelFromIndex, labelToIndex, prevState) {\n  const secondaryYAxisDataset = data.hasSecondYAxis && data.datasets.slice(-1)[0];\n  const filteredDatasets = data.datasets.filter((d) => filter[d.key] && d !== secondaryYAxisDataset);\n\n  const yRanges = calculateYRangesForGroup(data, labelFromIndex, labelToIndex, prevState, filteredDatasets);\n\n  if (secondaryYAxisDataset) {\n    const group = filter[secondaryYAxisDataset.key] ? [secondaryYAxisDataset] : [];\n    const {\n      yMinViewport: yMinViewportSecond,\n      yMaxViewport: yMaxViewportSecond,\n      yMinMinimap: yMinMinimapSecond,\n      yMaxMinimap: yMaxMinimapSecond,\n    } = calculateYRangesForGroup(data, labelFromIndex, labelToIndex, prevState, [secondaryYAxisDataset]);\n\n    Object.assign(yRanges, {\n      yMinViewportSecond,\n      yMaxViewportSecond,\n      yMinMinimapSecond,\n      yMaxMinimapSecond,\n    });\n  }\n\n  return yRanges;\n}\n\nfunction calculateYRangesForGroup(data, labelFromIndex, labelToIndex, prevState, datasets) {\n  const { min: yMinMinimapReal = prevState.yMinMinimap, max: yMaxMinimap = prevState.yMaxMinimap }\n    = getMaxMin(mergeArrays(datasets.map(({ yMax, yMin }) => [yMax, yMin])));\n  const yMinMinimap = yMinMinimapReal / yMaxMinimap > Y_AXIS_ZERO_BASED_THRESHOLD ? yMinMinimapReal : 0;\n\n  let yMinViewport;\n  let yMaxViewport;\n\n  if (labelFromIndex === 0 && labelToIndex === data.xLabels.length - 1) {\n    yMinViewport = yMinMinimap;\n    yMaxViewport = yMaxMinimap;\n  } else {\n    const filteredValues = datasets.map(({ values }) => values);\n    const viewportValues = filteredValues.map((values) => values.slice(labelFromIndex, labelToIndex + 1));\n    const viewportMaxMin = getMaxMin(mergeArrays(viewportValues));\n    const yMinViewportReal = viewportMaxMin.min !== undefined ? viewportMaxMin.min : prevState.yMinViewport;\n    yMaxViewport = viewportMaxMin.max !== undefined ? viewportMaxMin.max : prevState.yMaxViewport;\n    yMinViewport = yMinViewportReal / yMaxViewport > Y_AXIS_ZERO_BASED_THRESHOLD ? yMinViewportReal : 0;\n  }\n\n  return {\n    yMinViewport,\n    yMaxViewport,\n    yMinMinimap,\n    yMaxMinimap,\n  };\n}\n\nfunction calculateYRangesStacked(data, filter, labelFromIndex, labelToIndex, prevState) {\n  const filteredDatasets = data.datasets.filter((d) => filter[d.key]);\n  const filteredValues = filteredDatasets.map(({ values }) => values);\n\n  const sums = filteredValues.length ? sumArrays(filteredValues) : [];\n  const { max: yMaxMinimap = prevState.yMaxMinimap } = getMaxMin(sums);\n  const { max: yMaxViewport = prevState.yMaxViewport } = getMaxMin(sums.slice(labelFromIndex, labelToIndex + 1));\n\n  return {\n    yMinViewport: 0,\n    yMaxViewport,\n    yMinMinimap: 0,\n    yMaxMinimap,\n  };\n}\n\nfunction calculateXAxisScale(plotWidth, labelFromIndex, labelToIndex) {\n  const viewportLabelsCount = labelToIndex - labelFromIndex;\n  const maxColumns = Math.floor(plotWidth / AXES_MAX_COLUMN_WIDTH);\n\n  return xStepToScaleLevel(viewportLabelsCount / maxColumns);\n}\n\nfunction calculateYAxisScale(plotHeight, yMin, yMax) {\n  const availableHeight = plotHeight - X_AXIS_HEIGHT;\n  const viewportLabelsCount = yMax - yMin;\n  const maxRows = Math.floor(availableHeight / AXES_MAX_ROW_HEIGHT);\n\n  return yStepToScaleLevel(viewportLabelsCount / maxRows);\n}\n","export const createElement = (tagName = 'div') => {\n  return document.createElement(tagName);\n};\n\nexport function addEventListener(element, event, cb) {\n  element.addEventListener(event, cb);\n}\n\nexport function removeEventListener(element, event, cb) {\n  element.removeEventListener(event, cb);\n}\n","import { createElement } from './minifiers';\n\nexport function toggleText(element, newText, className = '', inverse = false) {\n  const container = element.parentNode;\n  container.classList.add('lovely-chart--transition-container');\n\n  const newElement = createElement(element.tagName);\n  newElement.className = `${className} lovely-chart--transition lovely-chart--position-${inverse ? 'top' : 'bottom'} lovely-chart--state-hidden`;\n  newElement.innerHTML = newText;\n\n  const selector = className.length ? `.${className.split(' ').join('.')}` : '';\n  const oldElements = container.querySelectorAll(`${selector}.lovely-chart--state-hidden`);\n  oldElements.forEach(e => e.remove());\n\n  element.classList.add('lovely-chart--transition');\n  element.classList.remove('lovely-chart--position-bottom', 'lovely-chart--position-top');\n  element.classList.add(inverse ? 'lovely-chart--position-bottom' : 'lovely-chart--position-top');\n  container.insertBefore(newElement, element.nextSibling);\n\n  toggleElementIn(newElement);\n  toggleElementOut(element);\n\n  return newElement;\n}\n\nfunction toggleElementIn(element) {\n  // Remove and add `animated` class to re-trigger animation\n  element.classList.remove('lovely-chart--state-animated');\n  element.classList.add('lovely-chart--state-animated');\n  element.classList.remove('lovely-chart--state-hidden');\n}\n\nfunction toggleElementOut(element) {\n  // Remove and add `animated` class to re-trigger animation\n  element.classList.remove('lovely-chart--state-animated');\n  element.classList.add('lovely-chart--state-animated');\n  element.classList.add('lovely-chart--state-hidden');\n}\n","import { createElement, addEventListener } from './minifiers';\nimport { toggleText } from './toggleText';\nimport { throttle } from './utils';\n\nexport function createHeader(container, title, zoomOutCallback) {\n  let _element;\n  let _titleElement;\n  let _zoomOutElement;\n  let _captionElement;\n\n  const setCaptionThrottled = throttle(setCaption, 400, false, true);\n\n  _setupLayout();\n\n  function setCaption(caption) {\n    if (!_captionElement.innerHTML) {\n      _captionElement.innerHTML = caption;\n    } else if (_captionElement.innerHTML !== caption) {\n      _captionElement = toggleText(_captionElement, caption, 'lovely-chart--header-caption lovely-chart--position-right');\n    }\n  }\n\n  function zoom(caption) {\n    _zoomOutElement = toggleText(_titleElement, 'Zoom Out', 'lovely-chart--header-title lovely-chart--header-zoom-out-control');\n    addEventListener(_zoomOutElement, 'click', _onZoomOut);\n\n    setCaption(caption);\n  }\n\n  function _setupLayout() {\n    _element = createElement();\n    _element.className = 'lovely-chart--header';\n\n    _titleElement = createElement();\n    _titleElement.className = 'lovely-chart--header-title';\n    _titleElement.innerHTML = title;\n    _element.appendChild(_titleElement);\n\n    _captionElement = createElement();\n    _captionElement.className = 'lovely-chart--header-caption lovely-chart--position-right';\n    _element.appendChild(_captionElement);\n\n    container.appendChild(_element);\n  }\n\n  function _onZoomOut() {\n    _titleElement = toggleText(_zoomOutElement, title, 'lovely-chart--header-title', true);\n\n    zoomOutCallback();\n  }\n\n  return {\n    setCaption: setCaptionThrottled,\n    zoom,\n  };\n}\n","import { MONTHS, MONTHS_SHORT, WEEK_DAYS, WEEK_DAYS_SHORT } from './constants';\n\nexport function buildDayLabels(labels) {\n  return labels.map((value) => {\n    const date = new Date(value);\n    const day = date.getDate();\n    const month = MONTHS_SHORT[date.getMonth()];\n\n    return ({\n      value,\n      text: `${day} ${month}`,\n    });\n  });\n}\n\nexport function buildTimeLabels(labels) {\n  return labels.map((value) => {\n    const date = new Date(value);\n    const hours = date.getUTCHours();\n    const minutes = date.getUTCMinutes();\n\n    return ({\n      value,\n      text: `${hours < 10 ? '0' : ''}${hours}:${minutes < 10 ? '0' : ''}${minutes}`,\n    });\n  });\n}\n\nexport function buildTextLabels(labels) {\n  return labels.map((value, i) => {\n    return ({\n      value: i,\n      text: value,\n    });\n  });\n}\n\nexport function humanize(value, decimals = 1) {\n  if (value >= 1e6) {\n    return keepThreeDigits(value / 1e6, decimals) + 'M';\n  } else if (value >= 1e3) {\n    return keepThreeDigits(value / 1e3, decimals) + 'K';\n  }\n\n  return value;\n}\n\n// TODO perf\nfunction keepThreeDigits(value, decimals) {\n  return value\n    .toFixed(decimals)\n    .replace(/(\\d{3,})\\.\\d+/, '$1')\n    .replace(/\\.0+$/, '');\n}\n\nexport function formatInteger(n) {\n  return String(n).replace(/\\d(?=(\\d{3})+$)/g, '$& ');\n}\n\nexport function getFullLabelDate(label, { isShort = false } = {}) {\n  return getLabelDate(label, { isShort, displayWeekDay: true });\n}\n\nexport function getLabelDate(label, { isShort = false, displayWeekDay = false, displayYear = true, displayHours = false } = {}) {\n  const { value } = label;\n  const date = new Date(value);\n  const monthsArray = isShort ? MONTHS_SHORT : MONTHS;\n  const weekDaysArray = isShort ? WEEK_DAYS_SHORT : WEEK_DAYS;\n\n  let string = `${date.getUTCDate()} ${monthsArray[date.getUTCMonth()]}`;\n  if (displayWeekDay) {\n    string = `${weekDaysArray[date.getUTCDay()]}, ` + string;\n  }\n  if (displayYear) {\n    string += ` ${date.getUTCFullYear()}`;\n  }\n  if (displayHours) {\n    string += `, ${('0' + date.getUTCHours()).slice(-2)}:${('0' + date.getUTCMinutes()).slice(-2)}`\n  }\n\n  return string;\n}\n","function detectSkin() {\n  return document.documentElement.classList.contains('dark') ? 'skin-night' : 'skin-day';\n}\n\nlet skin = detectSkin();\n\nconst COLORS = {\n  'skin-day': {\n    'background': '#FFFFFF',\n    'text-color': '#222222',\n    'minimap-mask': '#E2EEF9/0.6',\n    'minimap-slider': '#C0D1E1',\n    'grid-lines': '#182D3B/0.1',\n    'zoom-out-text': '#108BE3',\n    'tooltip-background': '#FFFFFF',\n    'tooltip-arrow': '#D2D5D7',\n    'mask': '#FFFFFF/0.5',\n    'x-axis-text': '#252529/0.6',\n    'y-axis-text': '#252529/0.6',\n  },\n  'skin-night': {\n    'background': '#242F3E',\n    'text-color': '#FFFFFF',\n    'minimap-mask': '#304259/0.6',\n    'minimap-slider': '#56626D',\n    'grid-lines': '#FFFFFF/0.1',\n    'zoom-out-text': '#48AAF0',\n    'tooltip-background': '#1c2533',\n    'tooltip-arrow': '#D2D5D7',\n    'mask': '#242F3E/0.5',\n    'x-axis-text': '#A3B1C2/0.6',\n    'y-axis-text': '#A3B1C2/0.6',\n  },\n};\n\nconst styleElement = document.createElement('style');\nstyleElement.type = 'text/css';\nstyleElement.appendChild(document.createTextNode(''));\ndocument.head.appendChild(styleElement);\nconst styleSheet = styleElement.sheet;\n\ndocument.documentElement.addEventListener('darkmode', () => {\n  skin = detectSkin();\n});\n\nexport function createColors(datasetColors) {\n  const colors = {};\n  const baseClass = `.lovely-chart--color`;\n\n  ['skin-day', 'skin-night'].forEach((skin) => {\n    colors[skin] = {};\n\n    Object.keys(COLORS[skin]).forEach((prop) => {\n      colors[skin][prop] = hexToChannels(COLORS[skin][prop]);\n    });\n\n    Object.keys(datasetColors).forEach((key) => {\n      colors[skin][`dataset#${key}`] = hexToChannels(datasetColors[key]);\n\n      addCssRule(styleSheet, `.lovely-chart--tooltip-dataset-value${baseClass}-${datasetColors[key].slice(1)}`, `color: ${datasetColors[key]}`);\n      addCssRule(styleSheet, `.lovely-chart--button${baseClass}-${datasetColors[key].slice(1)}`, `border-color: ${datasetColors[key]}; color: ${datasetColors[key]}`);\n      addCssRule(styleSheet, `.lovely-chart--button.lovely-chart--state-checked${baseClass}-${datasetColors[key].slice(1)}`, `background-color: ${datasetColors[key]}`);\n    });\n  });\n\n  return colors;\n}\n\nexport function getCssColor(colors, key, opacity) {\n  return buildCssColor(colors[skin][key], opacity);\n}\n\nfunction hexToChannels(hexWithAlpha) {\n  const [hex, alpha] = hexWithAlpha.replace('#', '').split('/');\n\n  return [\n    parseInt(hex.slice(0, 2), 16),\n    parseInt(hex.slice(2, 4), 16),\n    parseInt(hex.slice(4, 6), 16),\n    alpha ? parseFloat(alpha) : 1,\n  ];\n}\n\nfunction buildCssColor([r, g, b, a = 1], opacity = 1) {\n  return `rgba(${r}, ${g}, ${b}, ${a * opacity})`;\n}\n\nfunction addCssRule(sheet, selector, rule) {\n  sheet.insertRule(`${selector} { ${rule} }`, sheet.cssRules.length);\n}\n","import { proxyMerge } from './utils';\n\nexport function createProjection(params) {\n  const {\n    begin,\n    end,\n    totalXWidth,\n    yMin,\n    yMax,\n    availableWidth,\n    availableHeight,\n    xPadding = 0,\n    yPadding = 0,\n  } = params;\n\n  let effectiveWidth = availableWidth;\n\n  // TODO bug get rid of padding jumps\n  if (begin === 0) {\n    effectiveWidth -= xPadding;\n  }\n  if (end === 1) {\n    effectiveWidth -= xPadding;\n  }\n  const xFactor = effectiveWidth / ((end - begin) * totalXWidth);\n  let xOffsetPx = (begin * totalXWidth) * xFactor;\n  if (begin === 0) {\n    xOffsetPx -= xPadding;\n  }\n\n  const effectiveHeight = availableHeight - yPadding;\n  const yFactor = effectiveHeight / (yMax - yMin);\n  const yOffsetPx = yMin * yFactor;\n\n  function getState() {\n    return { xFactor, xOffsetPx, availableHeight, yFactor, yOffsetPx };\n  }\n\n  function findClosestLabelIndex(xPx) {\n    return Math.round((xPx + xOffsetPx) / xFactor);\n  }\n\n  function copy(overrides, cons) {\n    return createProjection(proxyMerge(params, overrides), cons);\n  }\n\n  function getCenter() {\n    return [\n      availableWidth / 2,\n      availableHeight - effectiveHeight / 2,\n    ];\n  }\n\n  function getSize() {\n    return [availableWidth, effectiveHeight];\n  }\n\n  function getParams() {\n    return params;\n  }\n\n  return {\n    findClosestLabelIndex,\n    copy,\n    getCenter,\n    getSize,\n    getParams,\n    getState,\n  };\n}\n\nexport function toPixels(projection, labelIndex, value) {\n  const { xFactor, xOffsetPx, availableHeight, yFactor, yOffsetPx } = projection.getState();\n\n  return [\n    labelIndex * xFactor - xOffsetPx,\n    availableHeight - (value * yFactor - yOffsetPx),\n  ];\n}\n","import { GUTTER, AXES_FONT, X_AXIS_HEIGHT, X_AXIS_SHIFT_START, PLOT_TOP_PADDING } from './constants';\nimport { humanize } from './format';\nimport { getCssColor } from './skin';\nimport { applyXEdgeOpacity, applyYEdgeOpacity, xScaleLevelToStep, yScaleLevelToStep } from './formulas';\nimport { toPixels } from './Projection';\n\nexport function createAxes(context, data, plotSize, colors) {\n  function drawXAxis(state, projection) {\n    context.clearRect(0, plotSize.height - X_AXIS_HEIGHT + 1, plotSize.width, X_AXIS_HEIGHT + 1);\n\n    const topOffset = plotSize.height - X_AXIS_HEIGHT / 2;\n    const scaleLevel = Math.floor(state.xAxisScale);\n    const step = xScaleLevelToStep(scaleLevel);\n    const opacityFactor = 1 - (state.xAxisScale - scaleLevel);\n\n    context.font = AXES_FONT;\n    context.textAlign = 'center';\n    context.textBaseline = 'middle';\n\n    for (let i = state.labelFromIndex; i <= state.labelToIndex; i++) {\n      const shiftedI = i - X_AXIS_SHIFT_START;\n\n      if (shiftedI % step !== 0) {\n        continue;\n      }\n\n      const label = data.xLabels[i];\n      const [xPx] = toPixels(projection, i, 0);\n      let opacity = shiftedI % (step * 2) === 0 ? 1 : opacityFactor;\n      opacity = applyYEdgeOpacity(opacity, xPx, plotSize.width);\n\n      context.fillStyle = getCssColor(colors, 'x-axis-text', opacity);\n      context.fillText(label.text, xPx, topOffset);\n    }\n  }\n\n  function drawYAxis(state, projection, secondaryProjection) {\n    const {\n      yAxisScale, yAxisScaleFrom, yAxisScaleTo, yAxisScaleProgress = 0,\n      yMinViewport, yMinViewportFrom, yMinViewportTo,\n      yMaxViewport, yMaxViewportFrom, yMaxViewportTo,\n      yMinViewportSecond, yMinViewportSecondFrom, yMinViewportSecondTo,\n      yMaxViewportSecond, yMaxViewportSecondFrom, yMaxViewportSecondTo,\n    } = state;\n    const colorKey = secondaryProjection && `dataset#${data.datasets[0].key}`;\n    const isYChanging = yMinViewportFrom !== undefined || yMaxViewportFrom !== undefined;\n\n    if (data.isPercentage) {\n      _drawYAxisPercents(projection);\n    } else {\n      _drawYAxisScaled(\n        state,\n        projection,\n        Math.round(yAxisScaleTo || yAxisScale),\n        yMinViewportTo !== undefined ? yMinViewportTo : yMinViewport,\n        yMaxViewportTo !== undefined ? yMaxViewportTo : yMaxViewport,\n        yAxisScaleFrom ? yAxisScaleProgress : 1,\n        colorKey,\n      );\n    }\n\n    if (yAxisScaleProgress > 0 && isYChanging) {\n      _drawYAxisScaled(\n        state,\n        projection,\n        Math.round(yAxisScaleFrom),\n        yMinViewportFrom !== undefined ? yMinViewportFrom : yMinViewport,\n        yMaxViewportFrom !== undefined ? yMaxViewportFrom : yMaxViewport,\n        1 - yAxisScaleProgress,\n        colorKey,\n      );\n    }\n\n    if (secondaryProjection) {\n      const { yAxisScaleSecond, yAxisScaleSecondFrom, yAxisScaleSecondTo, yAxisScaleSecondProgress = 0 } = state;\n      const secondaryColorKey = `dataset#${data.datasets[data.datasets.length - 1].key}`;\n      const isYChanging = yMinViewportSecondFrom !== undefined || yMaxViewportSecondFrom !== undefined;\n\n      _drawYAxisScaled(\n        state,\n        secondaryProjection,\n        Math.round(yAxisScaleSecondTo || yAxisScaleSecond),\n        yMinViewportSecondTo !== undefined ? yMinViewportSecondTo : yMinViewportSecond,\n        yMaxViewportSecondTo !== undefined ? yMaxViewportSecondTo : yMaxViewportSecond,\n        yAxisScaleSecondFrom ? yAxisScaleSecondProgress : 1,\n        secondaryColorKey,\n        true,\n      );\n\n      if (yAxisScaleSecondProgress > 0 && isYChanging) {\n        _drawYAxisScaled(\n          state,\n          secondaryProjection,\n          Math.round(yAxisScaleSecondFrom),\n          yMinViewportSecondFrom !== undefined ? yMinViewportSecondFrom : yMinViewportSecond,\n          yMaxViewportSecondFrom !== undefined ? yMaxViewportSecondFrom : yMaxViewportSecond,\n          1 - yAxisScaleSecondProgress,\n          secondaryColorKey,\n          true,\n        );\n      }\n    }\n  }\n\n  function _drawYAxisScaled(state, projection, scaleLevel, yMin, yMax, opacity = 1, colorKey = null, isSecondary = false) {\n    const step = yScaleLevelToStep(scaleLevel);\n    const firstVisibleValue = Math.ceil(yMin / step) * step;\n    const lastVisibleValue = Math.floor(yMax / step) * step;\n\n    context.font = AXES_FONT;\n    context.textAlign = isSecondary ? 'right' : 'left';\n    context.textBaseline = 'bottom';\n\n    context.lineWidth = 1;\n\n    context.beginPath();\n\n    for (let value = firstVisibleValue; value <= lastVisibleValue; value += step) {\n      const [, yPx] = toPixels(projection, 0, value);\n      const textOpacity = applyXEdgeOpacity(opacity, yPx);\n\n      context.fillStyle = colorKey\n        ? getCssColor(colors, colorKey, textOpacity)\n        : getCssColor(colors, 'y-axis-text', textOpacity);\n\n      if (!isSecondary) {\n        context.fillText(humanize(value), GUTTER, yPx - GUTTER / 2);\n      } else {\n        context.fillText(humanize(value), plotSize.width - GUTTER, yPx - GUTTER / 2);\n      }\n\n      if (isSecondary) {\n        context.strokeStyle = getCssColor(colors, colorKey, opacity);\n\n        context.moveTo(plotSize.width - GUTTER, yPx);\n        context.lineTo(plotSize.width - GUTTER * 2, yPx);\n      } else {\n        context.moveTo(GUTTER, yPx);\n        context.strokeStyle = getCssColor(colors, 'grid-lines', opacity);\n        context.lineTo(plotSize.width - GUTTER, yPx);\n      }\n    }\n\n    context.stroke();\n  }\n\n  function _drawYAxisPercents(projection) {\n    const percentValues = [0, 0.25, 0.50, 0.75, 1];\n    const [, height] = projection.getSize();\n\n    context.font = AXES_FONT;\n    context.textAlign = 'left';\n    context.textBaseline = 'bottom';\n    context.lineWidth = 1;\n\n    context.beginPath();\n\n    percentValues.forEach((value) => {\n      const yPx = height - height * value + PLOT_TOP_PADDING;\n\n      context.fillStyle = getCssColor(colors, 'y-axis-text', 1);\n      context.fillText(`${value * 100}%`, GUTTER, yPx - GUTTER / 4);\n\n      context.moveTo(GUTTER, yPx);\n      context.strokeStyle = getCssColor(colors, 'grid-lines', 1);\n      context.lineTo(plotSize.width - GUTTER, yPx);\n    });\n\n    context.stroke();\n  }\n\n  return { drawXAxis, drawYAxis };\n}\n","import { DPR } from './constants';\nimport { createElement } from './minifiers';\n\nexport function setupCanvas(container, { width, height }) {\n  const canvas = createElement('canvas');\n\n  canvas.width = width * DPR;\n  canvas.height = height * DPR;\n  canvas.style.width = '100%';\n  canvas.style.height = `${height}px`;\n\n  const context = canvas.getContext('2d');\n  context.scale(DPR, DPR);\n\n  container.appendChild(canvas);\n\n  return { canvas, context };\n}\n\nexport function clearCanvas(canvas, context) {\n  context.clearRect(0, 0, canvas.width, canvas.height);\n}\n","import { sumArrays } from './utils';\n\nexport function preparePoints(data, datasets, range, visibilities, bounds, pieToArea) {\n  let values = datasets.map(({ values }) => (\n    values.slice(range.from, range.to + 1)\n  ));\n\n  if (data.isPie && !pieToArea) {\n    values = prepareSumsByX(values);\n  }\n\n  const points = values.map((datasetValues, i) => (\n    datasetValues.map((value, j) => {\n      let visibleValue = value;\n\n      if (data.isStacked) {\n        visibleValue *= visibilities[i];\n      }\n\n      return {\n        labelIndex: range.from + j,\n        value,\n        visibleValue,\n        stackOffset: 0,\n        stackValue: visibleValue,\n      };\n    })\n  ));\n\n  if (data.isPercentage) {\n    preparePercentage(points, bounds);\n  }\n\n  if (data.isStacked) {\n    prepareStacked(points);\n  }\n\n  return points;\n}\n\nfunction getSumsByY(points) {\n  return sumArrays(points.map((datasetPoints) => (\n    datasetPoints.map(({ visibleValue }) => visibleValue)\n  )));\n}\n\n// TODO perf cache for [0..1], use in state\nfunction preparePercentage(points, bounds) {\n  const sumsByY = getSumsByY(points);\n\n  points.forEach((datasetPoints) => {\n    datasetPoints.forEach((point, j) => {\n      point.percent = point.visibleValue / sumsByY[j];\n      point.visibleValue = point.percent * bounds.yMax;\n    });\n  });\n}\n\nfunction prepareStacked(points) {\n  const accum = [];\n\n  points.forEach((datasetPoints) => {\n    datasetPoints.forEach((point, j) => {\n      if (accum[j] === undefined) {\n        accum[j] = 0;\n      }\n\n      point.stackOffset = accum[j];\n      accum[j] += point.visibleValue;\n      point.stackValue = accum[j];\n    });\n  });\n}\n\nfunction prepareSumsByX(values) {\n  return values.map((datasetValues) => (\n    [datasetValues.reduce((sum, value) => sum + value, 0)]\n  ));\n}\n","export const simplify = (() => {\n  function simplify(points, indexes, fixedPoints) {\n    if (points.length < 6) {\n      return function () {\n        return {\n          points: points,\n          indexes: indexes,\n          removed: [],\n        };\n      };\n    }\n\n    let worker = precalculate(points, fixedPoints);\n\n    return function (delta) {\n      let result = [],\n        resultIndexes = [],\n        removed = [];\n\n      let delta2 = delta * delta,\n        markers = worker(delta2);\n\n      for (let i = 0, l = points.length; i < l; i++) {\n        if (markers[i] >= delta2 || i == 0 || i == l - 1) {\n          result.push(points[i]);\n          resultIndexes.push(indexes ? indexes[i] : i);\n        } else {\n          removed.push(i);\n        }\n      }\n      return {\n        points: result,\n        indexes: resultIndexes,\n        removed: removed,\n      };\n    };\n  }\n\n  let E1 = 1.0 / Math.pow(2, 22), // максимальная дельта\n    MAXLIMIT = 100000;\n\n  function precalculate(points, fixedPoints) {\n\n    let len = points.length,\n      distances = [],\n      queue = [],\n      maximumDelta;\n    for (let i = 0, l = points.length; i < l; ++i) {\n      distances[i] = 0;\n    }\n\n    if (!fixedPoints) {\n      fixedPoints = [];\n    }\n\n    //инициализируем дерево срединным значением\n    //чтобы не попадает в ситуации когда начало линии близко к концу(те полигон)\n    //и правильные расчеты сложны\n    let subdivisionTree = 0;\n\n    for (let i = 0, l = fixedPoints.length; i < l; ++i) {\n      distances[fixedPoints[i]] = MAXLIMIT;\n    }\n\n\n    function worker(params) {\n\n      let start = params.start,\n        end = params.end,\n        record = params.record,\n        currentLimit = params.currentLimit,\n        usedDistance = 0;\n\n      if (!record) {\n        //let deltaShifts = getDeltaShifts(points);\n        let usedIndex = -1,\n          vector = [\n            points[end][0] - points[start][0],\n            points[end][1] - points[start][1],\n          ];\n        for (let i = 0, l = fixedPoints.length; i < l; ++i) {\n          let fixId = fixedPoints[i];\n          if (fixId > start) {\n            if (fixId < end) {\n              usedIndex = fixId;\n              usedDistance = MAXLIMIT;\n              break;\n            } else {\n              break;\n            }\n          }\n        }\n        if (usedIndex < 0) {\n          if (Math.abs(vector[0]) > E1 || Math.abs(vector[1]) > E1) {\n            let vectorLength = vector[0] * vector[0] + vector[1] * vector[1],\n              vectorLength_1 = +1.0 / vectorLength;\n\n            for (let i = start + 1; i < end; ++i) {\n              let segmentDistance = pointToSegmentDistanceSquare(points[i], points[start], points[end], vector, vectorLength_1);\n\n              if (segmentDistance > usedDistance) {\n                usedIndex = i;\n                usedDistance = segmentDistance;\n              }\n            }\n\n          } else {\n            //фиксируем на среднинной точке\n            usedIndex = Math.round((start + end) * 0.5);\n            usedDistance = currentLimit;\n          }\n          distances[usedIndex] = usedDistance;\n        }\n        record = {\n          start: start,\n          end: end,\n          index: usedIndex,\n          distance: usedDistance,\n        };\n      }\n\n      if (record.index && record.distance > maximumDelta) {\n        if (record.index - start >= 2) {\n          queue.push({\n            start: start,\n            end: record.index,\n            record: record.left,\n            currentLimit: record.distance,\n            parent: record,\n            parentProperty: 'left',\n          });\n        }\n        if (end - record.index >= 2) {\n          queue.push({\n            start: record.index,\n            end: end,\n            record: record.right,\n            currentLimit: record.distance,\n            parent: record,\n            parentProperty: 'right',\n          });\n        }\n      }\n\n      return record;\n    }\n\n    function tick() {\n      let request = queue.pop(),\n        result = worker(request);\n\n      if (request.parent && request.parentProperty) {\n        request.parent[request.parentProperty] = result;\n      }\n\n      return result;\n    }\n\n    return function (delta) {\n      maximumDelta = delta;\n      queue.push({\n        start: 0,\n        end: len - 1,\n        record: subdivisionTree,\n        currentLimit: MAXLIMIT,\n      });\n      subdivisionTree = tick();\n\n      while (queue.length) {\n        tick();\n      }\n\n      return distances;\n    };\n\n  }\n\n  function pointToSegmentDistanceSquare(p, v1, v2, dv, dvlen_1) {\n\n    let t;\n    let vx = +v1[0],\n      vy = +v1[1];\n\n    t = +((p[0] - vx) * dv[0] + (p[1] - vy) * dv[1]) * (dvlen_1);\n\n    if (t > 1) {\n      vx = +v2[0];\n      vy = +v2[1];\n    } else if (t > 0) {\n      vx += +dv[0] * t;\n      vy += +dv[1] * t;\n    }\n\n    let a = +p[0] - vx,\n      b = +p[1] - vy;\n\n    return +a * a + b * b;\n  }\n\n  return simplify;\n})();\n","import { getCssColor } from './skin';\nimport { mergeArrays } from './utils';\nimport { getPieRadius, getPieTextShift, getPieTextSize } from './formulas';\nimport { PLOT_BARS_WIDTH_SHIFT, PLOT_PIE_SHIFT } from './constants';\nimport { simplify } from './simplify';\nimport { toPixels } from './Projection';\n\nexport function drawDatasets(\n  context, state, data,\n  range, points, projection, secondaryPoints, secondaryProjection,\n  lineWidth, visibilities, colors, pieToBar, simplification,\n) {\n  data.datasets.forEach(({ key, type, hasOwnYAxis }, i) => {\n    if (!visibilities[i]) {\n      return;\n    }\n\n    const options = {\n      color: getCssColor(colors, `dataset#${key}`),\n      lineWidth,\n      opacity: data.isStacked ? 1 : visibilities[i],\n      simplification,\n    };\n\n    const datasetType = type === 'pie' && pieToBar ? 'bar' : type;\n    let datasetPoints = hasOwnYAxis ? secondaryPoints : points[i];\n    let datasetProjection = hasOwnYAxis ? secondaryProjection : projection;\n\n    if (datasetType === 'area') {\n      const { yMin, yMax } = projection.getParams();\n      const yHeight = yMax - yMin;\n      const bottomLine = [\n        { labelIndex: range.from, stackValue: 0 },\n        { labelIndex: range.to, stackValue: 0 },\n      ];\n      const topLine = [\n        { labelIndex: range.to, stackValue: yHeight },\n        { labelIndex: range.from, stackValue: yHeight },\n      ];\n\n      datasetPoints = mergeArrays([points[i - 1] || bottomLine, topLine]);\n    }\n\n    if (datasetType === 'pie') {\n      options.center = projection.getCenter();\n      options.radius = getPieRadius(projection);\n      options.pointerVector = state.focusOn;\n    }\n\n    if (datasetType === 'bar') {\n      const [x0] = toPixels(projection, 0, 0);\n      const [x1] = toPixels(projection, 1, 0);\n\n      options.lineWidth = x1 - x0;\n      options.focusOn = state.focusOn;\n    }\n\n    drawDataset(datasetType, context, datasetPoints, datasetProjection, options);\n  });\n\n  if (state.focusOn && data.isBars) {\n    const [x0] = toPixels(projection, 0, 0);\n    const [x1] = toPixels(projection, 1, 0);\n\n    drawBarsMask(context, projection, {\n      focusOn: state.focusOn,\n      color: getCssColor(colors, 'mask'),\n      lineWidth: x1 - x0,\n    });\n  }\n}\n\nfunction drawDataset(type, ...args) {\n  switch (type) {\n    case 'line':\n      return drawDatasetLine(...args);\n    case 'bar':\n      return drawDatasetBars(...args);\n    case 'area':\n      return drawDatasetArea(...args);\n    case 'pie':\n      return drawDatasetPie(...args);\n  }\n}\n\nfunction drawDatasetLine(context, points, projection, options) {\n  context.beginPath();\n\n  let pixels = [];\n\n  for (let j = 0, l = points.length; j < l; j++) {\n    const { labelIndex, stackValue } = points[j];\n    pixels.push(toPixels(projection, labelIndex, stackValue));\n  }\n\n  if (options.simplification) {\n    const simplifierFn = simplify(pixels);\n    pixels = simplifierFn(options.simplification).points;\n  }\n\n  pixels.forEach(([x, y]) => {\n    context.lineTo(x, y);\n  });\n\n  context.save();\n  context.strokeStyle = options.color;\n  context.lineWidth = options.lineWidth;\n  context.globalAlpha = options.opacity;\n  context.lineJoin = 'bevel';\n  context.lineCap = 'butt';\n  context.stroke();\n  context.restore();\n}\n\n// TODO try areas\nfunction drawDatasetBars(context, points, projection, options) {\n  const { yMin } = projection.getParams();\n\n  context.save();\n  context.globalAlpha = options.opacity;\n  context.fillStyle = options.color;\n\n  for (let j = 0, l = points.length; j < l; j++) {\n    const { labelIndex, stackValue, stackOffset = 0 } = points[j];\n\n    const [, yFrom] = toPixels(projection, labelIndex, Math.max(stackOffset, yMin));\n    const [x, yTo] = toPixels(projection, labelIndex, stackValue);\n    const rectX = x - options.lineWidth / 2;\n    const rectY = yTo;\n    const rectW = options.opacity === 1 ?\n      options.lineWidth + PLOT_BARS_WIDTH_SHIFT :\n      options.lineWidth + PLOT_BARS_WIDTH_SHIFT * options.opacity;\n    const rectH = yFrom - yTo;\n\n    context.fillRect(rectX, rectY, rectW, rectH);\n  }\n\n  context.restore();\n}\n\nfunction drawBarsMask(context, projection, options) {\n  const [xCenter, yCenter] = projection.getCenter();\n  const [width, height] = projection.getSize();\n\n  const [x] = toPixels(projection, options.focusOn, 0);\n\n  context.fillStyle = options.color;\n  context.fillRect(xCenter - width / 2, yCenter - height / 2, x - options.lineWidth / 2 + PLOT_BARS_WIDTH_SHIFT, height);\n  context.fillRect(x + options.lineWidth / 2, yCenter - height / 2, width - (x + options.lineWidth / 2), height);\n}\n\nfunction drawDatasetArea(context, points, projection, options) {\n  context.beginPath();\n\n  let pixels = [];\n\n  for (let j = 0, l = points.length; j < l; j++) {\n    const { labelIndex, stackValue } = points[j];\n    pixels.push(toPixels(projection, labelIndex, stackValue));\n  }\n\n  if (options.simplification) {\n    const simplifierFn = simplify(pixels);\n    pixels = simplifierFn(options.simplification).points;\n  }\n\n  pixels.forEach(([x, y]) => {\n    context.lineTo(x, y);\n  });\n\n  context.save();\n  context.fillStyle = options.color;\n  context.lineWidth = options.lineWidth;\n  context.globalAlpha = options.opacity;\n  context.lineJoin = 'bevel';\n  context.lineCap = 'butt';\n  context.fill();\n  context.restore();\n}\n\nfunction drawDatasetPie(context, points, projection, options) {\n  const { visibleValue, stackValue, stackOffset = 0 } = points[0];\n\n  if (!visibleValue) {\n    return;\n  }\n\n  const { yMin, yMax } = projection.getParams();\n  const percentFactor = 1 / (yMax - yMin);\n  const percent = visibleValue * percentFactor;\n\n  const beginAngle = stackOffset * percentFactor * Math.PI * 2 - Math.PI / 2;\n  const endAngle = stackValue * percentFactor * Math.PI * 2 - Math.PI / 2;\n\n  const { radius = 120, center: [x, y], pointerVector } = options;\n\n  const shift = (\n    pointerVector &&\n    beginAngle <= pointerVector.angle &&\n    pointerVector.angle < endAngle &&\n    pointerVector.distance <= radius\n  ) ? PLOT_PIE_SHIFT : 0;\n\n  const shiftAngle = (beginAngle + endAngle) / 2;\n  const directionX = Math.cos(shiftAngle);\n  const directionY = Math.sin(shiftAngle);\n  const shiftX = directionX * shift;\n  const shiftY = directionY * shift;\n\n  context.save();\n\n  context.beginPath();\n  context.fillStyle = options.color;\n  context.moveTo(x + shiftX, y + shiftY);\n  context.arc(x + shiftX, y + shiftY, radius, beginAngle, endAngle);\n  context.lineTo(x + shiftX, y + shiftY);\n  context.fill();\n\n  context.font = `700 ${getPieTextSize(percent, radius)}px Helvetica, Arial, sans-serif`;\n  context.textAlign = 'center';\n  context.textBaseline = 'middle';\n  context.fillStyle = 'white';\n  const textShift = getPieTextShift(percent, radius);\n  context.fillText(\n    `${Math.round(percent * 100)}%`, x + directionX * textShift + shiftX, y + directionY * textShift + shiftY,\n  );\n\n  context.restore();\n}\n","import { addEventListener, removeEventListener } from './minifiers';\nimport { LONG_PRESS_TIMEOUT } from './constants';\n\nexport function captureEvents(element, options) {\n  let captureEvent = null;\n  let longPressTimeout = null;\n\n  function onCapture(e) {\n    captureEvent = e;\n\n    if (e.type === 'mousedown') {\n      addEventListener(document, 'mousemove', onMove);\n      addEventListener(document, 'mouseup', onRelease);\n    } else if (e.type === 'touchstart') {\n      addEventListener(document, 'touchmove', onMove);\n      addEventListener(document, 'touchend', onRelease);\n      addEventListener(document, 'touchcancel', onRelease);\n\n      // https://stackoverflow.com/questions/11287877/how-can-i-get-e-offsetx-on-mobile-ipad\n      // Android does not have this value, and iOS has it but as read-only.\n      if (e.pageX === undefined) {\n        e.pageX = e.touches[0].pageX;\n      }\n    }\n\n    if (options.draggingCursor) {\n      document.documentElement.classList.add(`cursor-${options.draggingCursor}`);\n    }\n\n    options.onCapture && options.onCapture(e);\n\n    if (options.onLongPress) {\n      longPressTimeout = setTimeout(() => options.onLongPress(), LONG_PRESS_TIMEOUT);\n    }\n  }\n\n  function onRelease(e) {\n    if (captureEvent) {\n      if (longPressTimeout) {\n        clearTimeout(longPressTimeout);\n        longPressTimeout = null;\n      }\n\n      if (options.draggingCursor) {\n        document.documentElement.classList.remove(`cursor-${options.draggingCursor}`);\n      }\n\n      removeEventListener(document, 'mouseup', onRelease);\n      removeEventListener(document, 'mousemove', onMove);\n      removeEventListener(document, 'touchcancel', onRelease);\n      removeEventListener(document, 'touchend', onRelease);\n      removeEventListener(document, 'touchmove', onMove);\n\n      captureEvent = null;\n\n      options.onRelease && options.onRelease(e);\n    }\n  }\n\n  function onMove(e) {\n    if (captureEvent) {\n      if (longPressTimeout) {\n        clearTimeout(longPressTimeout);\n        longPressTimeout = null;\n      }\n\n      if (e.type === 'touchmove' && e.pageX === undefined) {\n        e.pageX = e.touches[0].pageX;\n      }\n\n      options.onDrag && options.onDrag(e, captureEvent, {\n        dragOffsetX: e.pageX - captureEvent.pageX,\n      });\n    }\n  }\n\n  addEventListener(element, 'mousedown', onCapture);\n  addEventListener(element, 'touchstart', onCapture);\n}\n","import { setupCanvas, clearCanvas } from './canvas';\nimport { preparePoints } from './preparePoints';\nimport { createProjection } from './Projection';\nimport { drawDatasets } from './drawDatasets';\nimport { captureEvents } from './captureEvents';\nimport {\n  DEFAULT_RANGE,\n  MINIMAP_HEIGHT,\n  MINIMAP_EAR_WIDTH,\n  MINIMAP_MARGIN,\n  MINIMAP_LINE_WIDTH,\n  MINIMAP_MAX_ANIMATED_DATASETS,\n  SIMPLIFIER_MINIMAP_FACTOR,\n} from './constants';\nimport { proxyMerge, throttleWithRaf } from './utils';\nimport { createElement } from './minifiers';\nimport { getSimplificationDelta } from './formulas';\n\nexport function createMinimap(container, data, colors, rangeCallback) {\n  let _element;\n  let _canvas;\n  let _context;\n  let _canvasSize;\n  let _ruler;\n  let _slider;\n\n  let _capturedOffset;\n  let _range = {};\n  let _state;\n\n  const _updateRulerOnRaf = throttleWithRaf(_updateRuler);\n\n  _setupLayout();\n  _updateRange(DEFAULT_RANGE);\n\n  function update(newState) {\n    const { begin, end } = newState;\n    if (!_capturedOffset) {\n      _updateRange({ begin, end }, true);\n    }\n\n    if (data.datasets.length >= MINIMAP_MAX_ANIMATED_DATASETS) {\n      newState = newState.static;\n    }\n\n    if (!_isStateChanged(newState)) {\n      return;\n    }\n\n    _state = proxyMerge(newState, { focusOn: null });\n    clearCanvas(_canvas, _context);\n\n    _drawDatasets(_state);\n  }\n\n  function toggle(shouldShow) {\n    _element.classList.toggle('lovely-chart--state-hidden', !shouldShow);\n\n    requestAnimationFrame(() => {\n      _element.classList.toggle('lovely-chart--state-transparent', !shouldShow);\n    });\n  }\n\n  function _setupLayout() {\n    _element = createElement();\n\n    _element.className = 'lovely-chart--minimap';\n    _element.style.height = `${MINIMAP_HEIGHT}px`;\n\n    _setupCanvas();\n    _setupRuler();\n\n    container.appendChild(_element);\n\n    _canvasSize = {\n      width: _canvas.offsetWidth,\n      height: _canvas.offsetHeight,\n    };\n  }\n\n  function _getSize() {\n    return {\n      width: container.offsetWidth - MINIMAP_MARGIN * 2,\n      height: MINIMAP_HEIGHT,\n    };\n  }\n\n  function _setupCanvas() {\n    const { canvas, context } = setupCanvas(_element, _getSize());\n\n    _canvas = canvas;\n    _context = context;\n  }\n\n  function _setupRuler() {\n    _ruler = createElement();\n    _ruler.className = 'lovely-chart--minimap-ruler';\n    _ruler.innerHTML =\n      '<div class=\"lovely-chart--minimap-mask\"></div>' +\n      '<div class=\"lovely-chart--minimap-slider\">' +\n      '<div class=\"lovely-chart--minimap-slider-handle\"><span class=\"lovely-chart--minimap-slider-handle-pin\"></span></div>' +\n      '<div class=\"lovely-chart--minimap-slider-inner\"></div>' +\n      '<div class=\"lovely-chart--minimap-slider-handle\"><span class=\"lovely-chart--minimap-slider-handle-pin\"></span></div>' +\n      '</div>' +\n      '<div class=\"lovely-chart--minimap-mask\"></div>';\n\n    _slider = _ruler.children[1];\n\n    captureEvents(\n      _slider.children[1],\n      {\n        onCapture: _onDragCapture,\n        onDrag: _onSliderDrag,\n        onRelease: _onDragRelease,\n        draggingCursor: 'grabbing',\n      },\n    );\n\n    captureEvents(\n      _slider.children[0],\n      {\n        onCapture: _onDragCapture,\n        onDrag: _onLeftEarDrag,\n        onRelease: _onDragRelease,\n        draggingCursor: 'ew-resize',\n      },\n    );\n\n    captureEvents(\n      _slider.children[2],\n      {\n        onCapture: _onDragCapture,\n        onDrag: _onRightEarDrag,\n        onRelease: _onDragRelease,\n        draggingCursor: 'ew-resize',\n      },\n    );\n\n    _element.appendChild(_ruler);\n  }\n\n  function _isStateChanged(newState) {\n    if (!_state) {\n      return true;\n    }\n\n    const { datasets } = data;\n\n    if (datasets.some(({ key }) => _state[`opacity#${key}`] !== newState[`opacity#${key}`])) {\n      return true;\n    }\n\n    if (_state.yMaxMinimap !== newState.yMaxMinimap) {\n      return true;\n    }\n\n    return false;\n  }\n\n  function _drawDatasets(state = {}) {\n    const { datasets } = data;\n    const range = {\n      from: 0,\n      to: state.totalXWidth,\n    };\n    const boundsAndParams = {\n      begin: 0,\n      end: 1,\n      totalXWidth: state.totalXWidth,\n      yMin: state.yMinMinimap,\n      yMax: state.yMaxMinimap,\n      availableWidth: _canvasSize.width,\n      availableHeight: _canvasSize.height,\n      yPadding: 1,\n    };\n    const visibilities = datasets.map(({ key }) => _state[`opacity#${key}`]);\n    const points = preparePoints(data, datasets, range, visibilities, boundsAndParams, true);\n    const projection = createProjection(boundsAndParams);\n\n    let secondaryPoints = null;\n    let secondaryProjection = null;\n    if (data.hasSecondYAxis) {\n      const secondaryDataset = datasets.find((d) => d.hasOwnYAxis);\n      const bounds = { yMin: state.yMinMinimapSecond, yMax: state.yMaxMinimapSecond };\n      secondaryPoints = preparePoints(data, [secondaryDataset], range, visibilities, bounds)[0];\n      secondaryProjection = projection.copy(bounds);\n    }\n\n    const totalPoints = points.reduce((a, p) => a + p.length, 0);\n    const simplification = getSimplificationDelta(totalPoints) * SIMPLIFIER_MINIMAP_FACTOR;\n\n    drawDatasets(\n      _context, state, data,\n      range, points, projection, secondaryPoints, secondaryProjection,\n      MINIMAP_LINE_WIDTH, visibilities, colors, true, simplification,\n    );\n  }\n\n  function _onDragCapture(e) {\n    e.preventDefault();\n    _capturedOffset = e.target.offsetLeft;\n  }\n\n  function _onDragRelease() {\n    _capturedOffset = null;\n  }\n\n  function _onSliderDrag(moveEvent, captureEvent, { dragOffsetX }) {\n    const minX1 = 0;\n    const maxX1 = _canvasSize.width - _slider.offsetWidth;\n\n    const newX1 = Math.max(minX1, Math.min(_capturedOffset + dragOffsetX - MINIMAP_EAR_WIDTH, maxX1));\n    const newX2 = newX1 + _slider.offsetWidth;\n    const begin = newX1 / _canvasSize.width;\n    const end = newX2 / _canvasSize.width;\n\n    _updateRange({ begin, end });\n  }\n\n  function _onLeftEarDrag(moveEvent, captureEvent, { dragOffsetX }) {\n    const minX1 = 0;\n    const maxX1 = _slider.offsetLeft + _slider.offsetWidth - MINIMAP_EAR_WIDTH * 2;\n\n    const newX1 = Math.min(maxX1, Math.max(minX1, _capturedOffset + dragOffsetX));\n    const begin = newX1 / _canvasSize.width;\n\n    _updateRange({ begin });\n  }\n\n  function _onRightEarDrag(moveEvent, captureEvent, { dragOffsetX }) {\n    const minX2 = _slider.offsetLeft + MINIMAP_EAR_WIDTH * 2;\n    const maxX2 = _canvasSize.width;\n\n    const newX2 = Math.max(minX2, Math.min(_capturedOffset + MINIMAP_EAR_WIDTH + dragOffsetX, maxX2));\n    const end = newX2 / _canvasSize.width;\n\n    _updateRange({ end });\n  }\n\n  function _updateRange(range, isExternal) {\n    let nextRange = Object.assign({}, _range, range);\n\n    if (_state && _state.minimapDelta && !isExternal) {\n      nextRange = _adjustDiscreteRange(nextRange);\n    }\n\n    if (nextRange.begin === _range.begin && nextRange.end === _range.end) {\n      return;\n    }\n\n    _range = nextRange;\n    _updateRulerOnRaf();\n\n    if (!isExternal) {\n      rangeCallback(_range);\n    }\n  }\n\n  function _adjustDiscreteRange(nextRange) {\n    // TODO sometimes beginChange and endChange are different for slider drag because of pixels division\n    const begin = Math.round(nextRange.begin / _state.minimapDelta) * _state.minimapDelta;\n    const end = Math.round(nextRange.end / _state.minimapDelta) * _state.minimapDelta;\n\n    return { begin, end };\n  }\n\n  function _updateRuler() {\n    const { begin, end } = _range;\n\n    _ruler.children[0].style.width = `${begin * 100}%`;\n    _ruler.children[1].style.width = `${(end - begin) * 100}%`;\n    _ruler.children[2].style.width = `${(1 - end) * 100}%`;\n  }\n\n  return { update, toggle };\n}\n","import { setupCanvas, clearCanvas } from './canvas';\nimport { BALLOON_OFFSET, X_AXIS_HEIGHT } from './constants';\nimport { getPieRadius, isDataRange } from './formulas';\nimport { formatInteger, getLabelDate, getFullLabelDate } from './format';\nimport { getCssColor } from './skin';\nimport { throttle, throttleWithRaf } from './utils';\nimport { addEventListener, createElement } from './minifiers';\nimport { toPixels } from './Projection';\n\nexport function createTooltip(container, data, plotSize, colors, onZoom, onFocus) {\n  let _state;\n  let _points;\n  let _projection;\n  let _secondaryPoints;\n  let _secondaryProjection;\n\n  let _element;\n  let _canvas;\n  let _context;\n  let _balloon;\n\n  let _offsetX;\n  let _offsetY;\n  let _clickedOnLabel = null;\n\n  let _isZoomed = false;\n  let _isZooming = false;\n\n  const _selectLabelOnRaf = throttleWithRaf(_selectLabel);\n  const _throttledUpdateContent = throttle(_updateContent, 100, true, true);\n\n  _setupLayout();\n\n  function update(state, points, projection, secondaryPoints, secondaryProjection) {\n    _state = state;\n    _points = points;\n    _projection = projection;\n    _secondaryPoints = secondaryPoints;\n    _secondaryProjection = secondaryProjection;\n    _selectLabel(true);\n  }\n\n  function toggleLoading(isLoading) {\n    _balloon.classList.toggle('lovely-chart--state-loading', isLoading);\n\n    if (!isLoading) {\n      _clear();\n    }\n  }\n\n  function toggleIsZoomed(isZoomed) {\n    if (isZoomed !== _isZoomed) {\n      _isZooming = true;\n    }\n    _isZoomed = isZoomed;\n    _balloon.classList.toggle('lovely-chart--state-inactive', isZoomed);\n  }\n\n  function _setupLayout() {\n    _element = createElement();\n    _element.className = `lovely-chart--tooltip`;\n\n    _setupCanvas();\n    _setupBalloon();\n\n    if ('ontouchstart' in window) {\n      addEventListener(_element, 'touchmove', _onMouseMove);\n      addEventListener(_element, 'touchstart', _onMouseMove);\n      addEventListener(document, 'touchstart', _onDocumentMove);\n    } else {\n      addEventListener(_element, 'mousemove', _onMouseMove);\n      addEventListener(_element, 'click', _onClick);\n      addEventListener(document, 'mousemove', _onDocumentMove);\n    }\n\n    container.appendChild(_element);\n  }\n\n  function _setupCanvas() {\n    const { canvas, context } = setupCanvas(_element, plotSize);\n\n    _canvas = canvas;\n    _context = context;\n  }\n\n  function _setupBalloon() {\n    _balloon = createElement();\n    _balloon.className = `lovely-chart--tooltip-balloon${!data.isZoomable ? ' lovely-chart--state-inactive' : ''}`;\n    _balloon.innerHTML = '<div class=\"lovely-chart--tooltip-title\"></div><div class=\"lovely-chart--tooltip-legend\"></div><div class=\"lovely-chart--spinner\"></div>';\n\n    if (data.isZoomable) {\n      addEventListener(_balloon, 'click', _onBalloonClick);\n    }\n\n    _element.appendChild(_balloon);\n  }\n\n  function _onMouseMove(e) {\n    if (e.target === _balloon || _balloon.contains(e.target) || _clickedOnLabel) {\n      return;\n    }\n\n    _isZooming = false;\n\n    const pageOffset = _getPageOffset(_element);\n    _offsetX = (e.touches ? e.touches[0].clientX : e.clientX) - pageOffset.left;\n    _offsetY = (e.touches ? e.touches[0].clientY : e.clientY) - pageOffset.top;\n\n    _selectLabelOnRaf();\n  }\n\n  function _onDocumentMove(e) {\n    if (_offsetX !== null && e.target !== _element && !_element.contains(e.target)) {\n      _clear();\n    }\n  }\n\n  function _onClick(e) {\n    if (_isZooming) {\n      return;\n    }\n\n    const oldLabelIndex = _clickedOnLabel;\n\n    _clickedOnLabel = null;\n    _onMouseMove(e, true);\n\n    const newLabelIndex = _getLabelIndex();\n    if (newLabelIndex !== oldLabelIndex) {\n      _clickedOnLabel = newLabelIndex;\n    }\n  }\n\n  function _onBalloonClick() {\n    if (_balloon.classList.contains('lovely-chart--state-inactive')) {\n      return;\n    }\n\n    const labelIndex = _projection.findClosestLabelIndex(_offsetX);\n    onZoom(labelIndex);\n  }\n\n  function _clear(isExternal) {\n    _offsetX = null;\n    _clickedOnLabel = null;\n    clearCanvas(_canvas, _context);\n    _hideBalloon();\n\n    if (!isExternal && onFocus) {\n      onFocus(null);\n    }\n  }\n\n  function _getLabelIndex() {\n    const labelIndex = _projection.findClosestLabelIndex(_offsetX);\n    return labelIndex < _state.labelFromIndex || labelIndex > _state.labelToIndex ? null : labelIndex;\n  }\n\n  function _selectLabel(isExternal) {\n    if (!_offsetX || !_state || _isZooming) {\n      return;\n    }\n\n    const labelIndex = _getLabelIndex();\n    if (labelIndex === null) {\n      _clear(isExternal);\n      return;\n    }\n\n    const pointerVector = getPointerVector();\n    const shouldShowBalloon = data.isPie ? pointerVector.distance <= getPieRadius(_projection) : true;\n\n    if (!isExternal && onFocus) {\n      if (data.isPie) {\n        onFocus(pointerVector);\n      } else {\n        onFocus(labelIndex);\n      }\n    }\n\n    function getValue(values, labelIndex) {\n      if (data.isPie) {\n        return values.slice(_state.labelFromIndex, _state.labelToIndex + 1).reduce((a, x) => a + x, 0);\n      }\n\n      return values[labelIndex];\n    }\n\n    const [xPx] = toPixels(_projection, labelIndex, 0);\n    const statistics = data.datasets\n      .map(({ key, name, values, hasOwnYAxis }, i) => ({\n        key,\n        name,\n        value: getValue(values, labelIndex),\n        hasOwnYAxis,\n        originalIndex: i,\n      }))\n      .filter(({ key }) => _state.filter[key]);\n\n    if (statistics.length && shouldShowBalloon) {\n      _updateBalloon(statistics, labelIndex);\n    } else {\n      _hideBalloon();\n    }\n\n    clearCanvas(_canvas, _context);\n    if (data.isLines || data.isAreas) {\n      if (data.isLines) {\n        _drawCircles(statistics, labelIndex);\n      }\n\n      _drawTail(xPx, plotSize.height - X_AXIS_HEIGHT, getCssColor(colors, 'grid-lines'));\n    }\n  }\n\n  function _drawCircles(statistics, labelIndex) {\n    statistics.forEach(({ value, key, hasOwnYAxis, originalIndex }) => {\n      const pointIndex = labelIndex - _state.labelFromIndex;\n      const point = hasOwnYAxis ? _secondaryPoints[pointIndex] : _points[originalIndex][pointIndex];\n\n      if (!point) {\n        return;\n      }\n\n      const [x, y] = hasOwnYAxis\n        ? toPixels(_secondaryProjection, labelIndex, point.stackValue)\n        : toPixels(_projection, labelIndex, point.stackValue);\n\n      // TODO animate\n      _drawCircle(\n        [x, y],\n        getCssColor(colors, `dataset#${key}`),\n        getCssColor(colors, 'background'),\n      );\n    });\n  }\n\n  function _drawCircle([xPx, yPx], strokeColor, fillColor) {\n    _context.strokeStyle = strokeColor;\n    _context.fillStyle = fillColor;\n    _context.lineWidth = 2;\n\n    _context.beginPath();\n    _context.arc(xPx, yPx, 4, 0, 2 * Math.PI);\n    _context.fill();\n    _context.stroke();\n  }\n\n  function _drawTail(xPx, height, color) {\n    _context.strokeStyle = color;\n    _context.lineWidth = 1;\n\n    _context.beginPath();\n    _context.moveTo(xPx, 0);\n    _context.lineTo(xPx, height);\n    _context.stroke();\n  }\n\n  function _getBalloonLeftOffset(labelIndex) {\n    const meanLabel = (_state.labelFromIndex + _state.labelToIndex) / 2;\n    const { angle } = getPointerVector();\n\n    const shouldPlaceRight = data.isPie ? angle > Math.PI / 2 : labelIndex < meanLabel;\n\n    return shouldPlaceRight\n        ? _offsetX + BALLOON_OFFSET\n        : _offsetX - (_balloon.offsetWidth + BALLOON_OFFSET);\n  }\n\n  function _getBalloonTopOffset() {\n    return data.isPie ? `${_offsetY}px` : 0;\n  }\n\n  function _updateBalloon(statistics, labelIndex) {\n    _balloon.style.transform = `translate3D(${_getBalloonLeftOffset(labelIndex)}px, ${_getBalloonTopOffset()}, 0)`;\n    _balloon.classList.add('lovely-chart--state-shown');\n\n    if (data.isPie) {\n      _updateContent(null, statistics);\n    } else {\n      _throttledUpdateContent(_getTitle(data, labelIndex), statistics);\n    }\n  }\n\n  function _getTitle(data, labelIndex) {\n    if (data.labelType === 'text') {\n      return data.xLabels[labelIndex].text;\n    }\n\n    if (_isZoomed) {\n      if (isDataRange(data.xLabels[_state.labelFromIndex + 1], data.xLabels[_state.labelToIndex - 1])) {\n        return getLabelDate(data.xLabels[labelIndex], { isShort: true, displayYear: false, displayHours: true });\n      }\n\n      return data.xLabels[labelIndex].text;\n    }\n\n    return getFullLabelDate(data.xLabels[labelIndex], { isShort: true });\n  }\n\n  function _isPieSectorSelected(statistics, value, totalValue, index, pointerVector) {\n    const offset = index > 0 ? statistics.slice(0, index).reduce((a, x) => a + x.value, 0) : 0;\n    const beginAngle = offset / totalValue * Math.PI * 2 - Math.PI / 2;\n    const endAngle = (offset + value) / totalValue * Math.PI * 2 - Math.PI / 2;\n\n    return pointerVector &&\n      beginAngle <= pointerVector.angle &&\n      pointerVector.angle < endAngle &&\n      pointerVector.distance <= getPieRadius(_projection);\n  }\n\n  function _updateTitle(title) {\n    const titleContainer = _balloon.children[0];\n\n    if (data.isPie) {\n      if (titleContainer) {\n        titleContainer.style.display = 'none';\n      }\n    } else {\n      if (titleContainer.style.display === 'none') {\n        titleContainer.style.display = '';\n      }\n      const currentTitle = titleContainer.querySelector(':not(.lovely-chart--state-hidden)');\n\n      if (!titleContainer.innerHTML || !currentTitle) {\n        titleContainer.innerHTML = `<span>${title}</span>`;\n      } else {\n        currentTitle.innerHTML = title;\n      }\n    }\n  }\n\n  function _insertNewDataSet(dataSetContainer, { name, key, value }, totalValue) {\n    const className = `lovely-chart--tooltip-dataset-value lovely-chart--position-right lovely-chart--color-${data.colors[key].slice(1)}`;\n    const newDataSet = createElement();\n    newDataSet.className = 'lovely-chart--tooltip-dataset';\n    newDataSet.setAttribute('data-present', 'true');\n    newDataSet.setAttribute('data-name', name);\n    newDataSet.innerHTML = `<span class=\"lovely-chart--dataset-title\">${name}</span><span class=\"${className}\">${formatInteger(value)}</span>`;\n    _renderPercentageValue(newDataSet, value, totalValue);\n\n    const totalText = dataSetContainer.querySelector(`[data-total=\"true\"]`);\n    if (totalText) {\n      dataSetContainer.insertBefore(newDataSet, totalText);\n    } else {\n      dataSetContainer.appendChild(newDataSet);\n    }\n  }\n\n  function _updateDataSet(currentDataSet, { key, value } = {}, totalValue) {\n    currentDataSet.setAttribute('data-present', 'true');\n\n    const valueElement = currentDataSet.querySelector(`.lovely-chart--tooltip-dataset-value.lovely-chart--color-${data.colors[key].slice(1)}:not(.lovely-chart--state-hidden)`);\n    valueElement.innerHTML = formatInteger(value);\n\n    _renderPercentageValue(currentDataSet, value, totalValue);\n  }\n\n  function _renderPercentageValue(dataSet, value, totalValue) {\n    if (!data.isPercentage) {\n      return;\n    }\n\n    if (data.isPie) {\n      Array.from(dataSet.querySelectorAll(`.lovely-chart--percentage-title`)).forEach(e => e.remove());\n      return;\n    }\n\n    const percentageValue = Math.round(value / totalValue * 100);\n    const percentageElement = dataSet.querySelector(`.lovely-chart--percentage-title:not(.lovely-chart--state-hidden)`);\n\n    if (!percentageElement) {\n      const newPercentageTitle = createElement('span');\n      newPercentageTitle.className = 'lovely-chart--percentage-title lovely-chart--position-left';\n      newPercentageTitle.innerHTML = `${percentageValue}%`;\n      dataSet.prepend(newPercentageTitle);\n    } else {\n      percentageElement.innerHTML = `${percentageValue}%`;\n    }\n  }\n\n  function _updateDataSets(statistics) {\n    const dataSetContainer = _balloon.children[1];\n    if (data.isPie) {\n      dataSetContainer.classList.add('lovely-chart--tooltip-legend-pie');\n    }\n\n    Array.from(dataSetContainer.children).forEach((dataSet) => {\n      if (!data.isPie && dataSetContainer.classList.contains('lovely-chart--tooltip-legend-pie')) {\n        dataSet.remove();\n      } else {\n        dataSet.setAttribute('data-present', 'false');\n      }\n    });\n\n    const totalValue = statistics.reduce((a, x) => a + x.value, 0);\n    const pointerVector = getPointerVector();\n    const finalStatistics = data.isPie ? statistics.filter(({ value }, index) => _isPieSectorSelected(statistics, value, totalValue, index, pointerVector)) : statistics;\n\n    finalStatistics.forEach((statItem) => {\n      const currentDataSet = dataSetContainer.querySelector(`[data-name=\"${statItem.name}\"]`);\n\n      if (!currentDataSet) {\n        _insertNewDataSet(dataSetContainer, statItem, totalValue);\n      } else {\n        _updateDataSet(currentDataSet, statItem, totalValue);\n      }\n    });\n\n    if (data.isBars && data.isStacked) {\n      _renderTotal(dataSetContainer, formatInteger(totalValue));\n    }\n\n    Array.from(dataSetContainer.querySelectorAll('[data-present=\"false\"]'))\n      .forEach((dataSet) => {\n        dataSet.remove();\n      });\n  }\n\n  function _updateContent(title, statistics) {\n    _updateTitle(title);\n    _updateDataSets(statistics);\n  }\n\n  function _renderTotal(dataSetContainer, totalValue) {\n    const totalText = dataSetContainer.querySelector(`[data-total=\"true\"]`);\n    const className = `lovely-chart--tooltip-dataset-value lovely-chart--position-right`;\n    if (!totalText) {\n      const newTotalText = createElement();\n      newTotalText.className = 'lovely-chart--tooltip-dataset';\n      newTotalText.setAttribute('data-present', 'true');\n      newTotalText.setAttribute('data-total', 'true');\n      newTotalText.innerHTML = `<span>All</span><span class=\"${className}\">${totalValue}</span>`;\n      dataSetContainer.appendChild(newTotalText);\n    } else {\n      totalText.setAttribute('data-present', 'true');\n\n      const valueElement = totalText.querySelector(`.lovely-chart--tooltip-dataset-value:not(.lovely-chart--state-hidden)`);\n      valueElement.innerHTML = totalValue;\n    }\n  }\n\n  function _hideBalloon() {\n    _balloon.classList.remove('lovely-chart--state-shown');\n  }\n\n  function getPointerVector() {\n    const { width, height } = _element.getBoundingClientRect();\n\n    const center = [width / 2, height / 2];\n    const angle = Math.atan2(_offsetY - center[1], _offsetX - center[0]);\n    const distance = Math.sqrt((_offsetX - center[0]) ** 2 + (_offsetY - center[1]) ** 2);\n\n    return {\n      angle: angle >= -Math.PI / 2 ? angle : 2 * Math.PI + angle,\n      distance,\n    };\n  }\n\n  function _getPageOffset(el) {\n    return el.getBoundingClientRect();\n  }\n\n  return { update, toggleLoading, toggleIsZoomed };\n}\n\n","import { createElement } from './minifiers';\nimport { captureEvents } from './captureEvents';\n\nexport function createTools(container, data, filterCallback) {\n  let _element;\n\n  _setupLayout();\n  _updateFilter();\n\n  function redraw() {\n    if (_element) {\n      const oldElement = _element;\n      oldElement.classList.add('lovely-chart--state-hidden');\n      setTimeout(() => {\n        oldElement.parentNode.removeChild(oldElement);\n      }, 500);\n    }\n\n    _setupLayout();\n    _element.classList.add('lovely-chart--state-transparent');\n    requestAnimationFrame(() => {\n      _element.classList.remove('lovely-chart--state-transparent');\n    });\n  }\n\n  function _setupLayout() {\n    _element = createElement();\n    _element.className = 'lovely-chart--tools';\n\n    if (data.datasets.length < 2) {\n      _element.className += ' lovely-chart--state-hidden';\n    }\n\n    data.datasets.forEach(({ key, name }) => {\n      const control = createElement('a');\n      control.href = '#';\n      control.dataset.key = key;\n      control.className = `lovely-chart--button lovely-chart--color-${data.colors[key].slice(1)} lovely-chart--state-checked`;\n      control.innerHTML = `<span class=\"lovely-chart--button-check\"></span><span class=\"lovely-chart--button-label\">${name}</span>`;\n\n      control.addEventListener('click', (e) => {\n        e.preventDefault();\n\n        if (!control.dataset.clickPrevented) {\n          _updateFilter(control);\n        }\n\n        delete control.dataset.clickPrevented;\n      });\n\n      captureEvents(control, {\n        onLongPress: () => {\n          control.dataset.clickPrevented = 'true';\n\n          _updateFilter(control, true);\n        },\n      });\n\n      _element.appendChild(control);\n    });\n\n    container.appendChild(_element);\n  }\n\n  function _updateFilter(button, isLongPress = false) {\n    const buttons = Array.from(_element.getElementsByTagName('a'));\n    const isSingleChecked = _element.querySelectorAll('.lovely-chart--state-checked').length === 1;\n\n    if (button) {\n      if (button.classList.contains('lovely-chart--state-checked') && isSingleChecked) {\n        if (isLongPress) {\n          buttons.forEach((b) => b.classList.add('lovely-chart--state-checked'));\n          button.classList.remove('lovely-chart--state-checked');\n        } else {\n          button.classList.remove('lovely-chart--state-shake');\n          requestAnimationFrame(() => {\n            button.classList.add('lovely-chart--state-shake');\n          });\n        }\n      } else if (isLongPress) {\n        buttons.forEach((b) => b.classList.remove('lovely-chart--state-checked'));\n        button.classList.add('lovely-chart--state-checked');\n      } else {\n        button.classList.toggle('lovely-chart--state-checked');\n      }\n    }\n\n    const filter = {};\n\n    buttons.forEach((input) => {\n      filter[input.dataset.key] = input.classList.contains('lovely-chart--state-checked');\n    });\n\n    filterCallback(filter);\n  }\n\n  return {\n    redraw,\n  };\n}\n","import { getMaxMin } from './utils';\nimport { buildDayLabels, buildTimeLabels, buildTextLabels } from './format';\n\nexport function analyzeData(data) {\n  const { title, labelType, isStacked, isPercentage, hasSecondYAxis, onZoom } = data;\n  const { datasets, labels } = prepareDatasets(data);\n\n  const colors = {};\n  let totalYMin = Infinity;\n  let totalYMax = -Infinity;\n  datasets.forEach(({ key, color, yMin, yMax }) => {\n    colors[key] = color;\n\n    if (yMin < totalYMin) {\n      totalYMin = yMin;\n    }\n\n    if (yMax > totalYMax) {\n      totalYMax = yMax;\n    }\n  });\n\n  let xLabels;\n  switch (labelType) {\n    case 'hour':\n      xLabels = buildTimeLabels(labels);\n      break;\n    case 'text':\n      xLabels = buildTextLabels(labels);\n      break;\n    default:\n      xLabels = buildDayLabels(labels);\n      break;\n  }\n\n  const analyzed = {\n    title,\n    labelType,\n    xLabels,\n    datasets,\n    isStacked,\n    isPercentage,\n    hasSecondYAxis,\n    onZoom,\n    isLines: data.type === 'line',\n    isBars: data.type === 'bar',\n    isAreas: data.type === 'area',\n    isPie: data.type === 'pie',\n    yMin: totalYMin,\n    yMax: totalYMax,\n    colors,\n  };\n\n  analyzed.shouldZoomToPie = !analyzed.onZoom && analyzed.isPercentage;\n  analyzed.isZoomable = analyzed.onZoom || analyzed.shouldZoomToPie;\n\n  return analyzed;\n}\n\nfunction prepareDatasets(data) {\n  const { type, labels, datasets, hasSecondYAxis } = data;\n\n  return {\n    labels: cloneArray(labels),\n    datasets: datasets.map(({ name, color, values }, i) => {\n      const { min: yMin, max: yMax } = getMaxMin(values);\n\n      return {\n        type,\n        key: `y${i}`,\n        name,\n        color,\n        values: cloneArray(values),\n        hasOwnYAxis: hasSecondYAxis && i === datasets.length - 1,\n        yMin,\n        yMax,\n      };\n    }),\n  };\n}\n\nfunction cloneArray(array) {\n  return array.slice(0);\n}\n","import { analyzeData } from './data';\nimport { getFullLabelDate } from './format';\nimport { ZOOM_RANGE_DELTA, ZOOM_RANGE_MIDDLE, ZOOM_TIMEOUT } from './constants';\nimport { createColors } from './skin';\n\nexport function createZoomer(data, overviewData, colors, stateManager, container, header, minimap, tooltip, tools) {\n  let _isZoomed = false;\n  let _stateBeforeZoomIn;\n  let _stateBeforeZoomOut;\n\n  function zoomIn(state, labelIndex) {\n    if (_isZoomed) {\n      return;\n    }\n\n    const label = data.xLabels[labelIndex];\n\n    _stateBeforeZoomIn = state;\n    tooltip.toggleLoading(true);\n    tooltip.toggleIsZoomed(true);\n    if (data.shouldZoomToPie) {\n      container.classList.add('lovely-chart--state-zoomed-in');\n      container.classList.add('lovely-chart--state-animating');\n    }\n\n    const { value: date } = label;\n    const dataPromise = data.shouldZoomToPie ? Promise.resolve(_generatePieData(labelIndex)) : data.onZoom(date);\n    dataPromise.then((newData) => _replaceData(newData, labelIndex, label));\n  }\n\n  function zoomOut(state) {\n    if (!_isZoomed) {\n      return;\n    }\n\n    _stateBeforeZoomOut = state;\n    tooltip.toggleLoading(true);\n    tooltip.toggleIsZoomed(false);\n    if (data.shouldZoomToPie) {\n      container.classList.remove('lovely-chart--state-zoomed-in');\n      container.classList.add('lovely-chart--state-animating');\n    }\n\n    const labelIndex = Math.round((state.labelFromIndex + state.labelToIndex) / 2);\n    _replaceData(overviewData, labelIndex);\n  }\n\n  function isZoomed() {\n    return _isZoomed;\n  }\n\n  function _replaceData(newRawData, labelIndex, zoomInLabel) {\n    const labelWidth = 1 / data.xLabels.length;\n    const labelMiddle = labelIndex / (data.xLabels.length - 1);\n    const filter = {};\n    data.datasets.forEach(({ key }) => filter[key] = false);\n    const newData = analyzeData(newRawData, _isZoomed || data.shouldZoomToPie ? 'day' : 'hour');\n    const shouldZoomToLines = Object.keys(data.datasets).length !== Object.keys(newData.datasets).length;\n\n    stateManager.update({\n      range: {\n        begin: labelMiddle - labelWidth / 2,\n        end: labelMiddle + labelWidth / 2,\n      },\n      filter,\n    });\n\n    setTimeout(() => {\n      Object.assign(data, newData);\n      if (shouldZoomToLines) {\n        Object.assign(colors, createColors(newRawData.colors));\n      }\n\n      if (shouldZoomToLines) {\n        minimap.toggle(_isZoomed);\n        tools.redraw();\n        container.style.width = `${container.scrollWidth}px`;\n        container.style.height = `${container.scrollHeight}px`;\n      }\n\n      stateManager.update({\n        range: {\n          begin: ZOOM_RANGE_MIDDLE - ZOOM_RANGE_DELTA,\n          end: ZOOM_RANGE_MIDDLE + ZOOM_RANGE_DELTA,\n        },\n        focusOn: null,\n      }, true);\n\n      const daysCount = _isZoomed || data.shouldZoomToPie ? data.xLabels.length : data.xLabels.length / 24;\n      const halfDayWidth = (1 / daysCount) / 2;\n\n      let range;\n      let filter;\n\n      if (_isZoomed) {\n        range = {\n          begin: _stateBeforeZoomIn.begin,\n          end: _stateBeforeZoomIn.end,\n        };\n        filter = shouldZoomToLines ? _stateBeforeZoomIn.filter : _stateBeforeZoomOut.filter;\n      } else {\n        if (shouldZoomToLines) {\n          range = {\n            begin: 0,\n            end: 1,\n          };\n          filter = {};\n          data.datasets.forEach(({ key }) => filter[key] = true);\n        } else {\n          range = {\n            begin: ZOOM_RANGE_MIDDLE - halfDayWidth,\n            end: ZOOM_RANGE_MIDDLE + halfDayWidth,\n          };\n          filter = _stateBeforeZoomIn.filter;\n        }\n      }\n\n      stateManager.update({\n        range,\n        filter,\n        minimapDelta: _isZoomed ? null : range.end - range.begin,\n      });\n\n      if (zoomInLabel) {\n        header.zoom(getFullLabelDate(zoomInLabel));\n      }\n\n      _isZoomed = !_isZoomed;\n      tooltip.toggleLoading(false);\n    }, stateManager.hasAnimations() ? ZOOM_TIMEOUT : 0);\n\n    setTimeout(() => {\n      if (data.shouldZoomToPie) {\n        container.classList.remove('lovely-chart--state-animating');\n      }\n    }, stateManager.hasAnimations() ? 1000 : 0);\n  }\n\n  function _generatePieData(labelIndex) {\n    return Object.assign(\n      {},\n      overviewData,\n      {\n        type: 'pie',\n        labels: overviewData.labels.slice(labelIndex - 3, labelIndex + 4),\n        datasets: overviewData.datasets.map((dataset) => {\n          return {\n            ...dataset,\n            values: dataset.values.slice(labelIndex - 3, labelIndex + 4),\n          };\n        }),\n      },\n    );\n  }\n\n  return { zoomIn, zoomOut, isZoomed };\n}\n","import { debounce } from './utils';\n\nexport const hideOnScroll = (() => {\n  const chartEls = [];\n  const showAllDebounced = debounce(showAll, 500, true, false);\n  const hideScrolledDebounced = debounce(hideScrolled, 500, false, true);\n\n  function setup(chartEl) {\n    chartEls.push(chartEl);\n\n    if (chartEls.length === 1) {\n      window.onscroll = () => {\n        showAllDebounced();\n        hideScrolledDebounced();\n      };\n    } else {\n      hideScrolledDebounced();\n    }\n  }\n\n  function showAll() {\n    chartEls.forEach((chartEl) => {\n      chartEl.classList.remove('lovely-chart--state-invisible');\n    });\n  }\n\n  function hideScrolled() {\n    chartEls.forEach((chartEl) => {\n      const { top, bottom } = chartEl.getBoundingClientRect();\n      const shouldHide = bottom < 0 || top > window.innerHeight;\n\n      if (!chartEl.classList.contains('lovely-chart--state-invisible')) {\n        chartEl.style.width = `${chartEl.scrollWidth}px`;\n        chartEl.style.height = `${chartEl.scrollHeight}px`;\n      }\n\n      chartEl.classList.toggle('lovely-chart--state-invisible', shouldHide);\n    });\n  }\n\n  return setup;\n})();\n","import { createStateManager } from './StateManager';\nimport { createHeader } from './Header';\nimport { createAxes } from './Axes';\nimport { createMinimap } from './Minimap';\nimport { createTooltip } from './Tooltip';\nimport { createTools } from './Tools';\nimport { createZoomer } from './Zoomer';\nimport { createColors } from './skin';\nimport { analyzeData } from './data';\nimport { setupCanvas, clearCanvas } from './canvas';\nimport { preparePoints } from './preparePoints';\nimport { createProjection } from './Projection';\nimport { drawDatasets } from './drawDatasets';\nimport { createElement } from './minifiers';\nimport { getFullLabelDate, getLabelDate } from './format';\nimport { hideOnScroll } from './hideOnScroll';\nimport {\n  X_AXIS_HEIGHT,\n  GUTTER,\n  PLOT_TOP_PADDING,\n  PLOT_HEIGHT,\n  PLOT_LINE_WIDTH,\n  SIMPLIFIER_PLOT_FACTOR,\n} from './constants';\nimport { getSimplificationDelta, isDataRange } from './formulas';\nimport { debounce } from './utils';\nimport './styles/index.scss';\n\nfunction create(container, originalData) {\n  let _stateManager;\n\n  let _element;\n  let _plot;\n  let _context;\n  let _plotSize;\n\n  let _header;\n  let _axes;\n  let _minimap;\n  let _tooltip;\n  let _tools;\n  let _zoomer;\n\n  let _state;\n  let _windowWidth = window.innerWidth;\n\n  const _data = analyzeData(originalData);\n  const _colors = createColors(_data.colors);\n  const _redrawDebounced = debounce(_redraw, 500, false, true);\n\n  _setupComponents();\n  _setupGlobalListeners();\n\n  function _setupComponents() {\n    _setupContainer();\n    _header = createHeader(_element, _data.title, _onZoomOut);\n    _setupPlotCanvas();\n    _stateManager = createStateManager(_data, _plotSize, _onStateUpdate);\n    _axes = createAxes(_context, _data, _plotSize, _colors);\n    _minimap = createMinimap(_element, _data, _colors, _onRangeChange);\n    _tooltip = createTooltip(_element, _data, _plotSize, _colors, _onZoomIn, _onFocus);\n    _tools = createTools(_element, _data, _onFilterChange);\n    _zoomer = _data.isZoomable && createZoomer(_data, originalData, _colors, _stateManager, _element, _header, _minimap, _tooltip, _tools);\n    hideOnScroll(_element);\n  }\n\n  function _setupContainer() {\n    _element = createElement();\n    _element.className = `lovely-chart--container${_data.shouldZoomToPie ? ' lovely-chart--container-type-pie' : ''}`;\n\n    container.appendChild(_element);\n  }\n\n  function _setupPlotCanvas() {\n    const { canvas, context } = setupCanvas(_element, {\n      width: _element.clientWidth,\n      height: PLOT_HEIGHT,\n    });\n\n    _plot = canvas;\n    _context = context;\n\n    _plotSize = {\n      width: _plot.offsetWidth,\n      height: _plot.offsetHeight,\n    };\n  }\n\n  function _onStateUpdate(state) {\n    _state = state;\n\n    const { datasets } = _data;\n    const range = {\n      from: state.labelFromIndex,\n      to: state.labelToIndex,\n    };\n    const boundsAndParams = {\n      begin: state.begin,\n      end: state.end,\n      totalXWidth: state.totalXWidth,\n      yMin: state.yMinViewport,\n      yMax: state.yMaxViewport,\n      availableWidth: _plotSize.width,\n      availableHeight: _plotSize.height - X_AXIS_HEIGHT,\n      xPadding: GUTTER,\n      yPadding: PLOT_TOP_PADDING,\n    };\n    const visibilities = datasets.map(({ key }) => state[`opacity#${key}`]);\n    const points = preparePoints(_data, datasets, range, visibilities, boundsAndParams);\n    const projection = createProjection(boundsAndParams);\n\n    let secondaryPoints = null;\n    let secondaryProjection = null;\n    if (_data.hasSecondYAxis) {\n      const secondaryDataset = datasets.find((d) => d.hasOwnYAxis);\n      const bounds = {\n        yMin: state.yMinViewportSecond,\n        yMax: state.yMaxViewportSecond,\n      };\n      secondaryPoints = preparePoints(_data, [secondaryDataset], range, visibilities, bounds)[0];\n      secondaryProjection = projection.copy(bounds);\n    }\n\n    _header.setCaption(_getCaption(state));\n\n    clearCanvas(_plot, _context);\n\n    const totalPoints = points.reduce((a, p) => a + p.length, 0);\n    const simplification = getSimplificationDelta(totalPoints) * SIMPLIFIER_PLOT_FACTOR;\n\n    drawDatasets(\n      _context, state, _data,\n      range, points, projection, secondaryPoints, secondaryProjection,\n      PLOT_LINE_WIDTH, visibilities, _colors, false, simplification,\n    );\n    if (!_data.isPie) {\n      _axes.drawYAxis(state, projection, secondaryProjection);\n      // TODO check isChanged\n      _axes.drawXAxis(state, projection);\n    }\n    _minimap.update(state);\n    _tooltip.update(state, points, projection, secondaryPoints, secondaryProjection);\n  }\n\n  function _onRangeChange(range) {\n    _stateManager.update({ range });\n  }\n\n  function _onFilterChange(filter) {\n    _stateManager.update({ filter });\n  }\n\n  function _onFocus(focusOn) {\n    if (_data.isBars || _data.isPie) {\n      // TODO animate\n      _stateManager.update({ focusOn });\n    }\n  }\n\n  function _onZoomIn(labelIndex) {\n    _zoomer.zoomIn(_state, labelIndex);\n  }\n\n  function _onZoomOut() {\n    _zoomer.zoomOut(_state);\n  }\n\n  function _setupGlobalListeners() {\n    document.documentElement.addEventListener('darkmode', () => {\n      _stateManager.update();\n    });\n\n    window.addEventListener('resize', () => {\n      if (window.innerWidth !== _windowWidth) {\n        _windowWidth = window.innerWidth;\n        _redrawDebounced();\n      }\n    });\n\n    window.addEventListener('orientationchange', () => {\n      _redrawDebounced();\n    });\n  }\n\n  function _redraw() {\n    Object.assign(_data, analyzeData(originalData));\n    _element.remove();\n    _setupComponents();\n  }\n\n  function _getCaption(state) {\n    let startIndex;\n    let endIndex;\n\n    if (_zoomer && _zoomer.isZoomed()) {\n      // TODO Fix label\n      startIndex = state.labelFromIndex === 0 ? 0 : state.labelFromIndex + 1;\n      endIndex = state.labelToIndex === state.totalXWidth - 1 ? state.labelToIndex : state.labelToIndex - 1;\n    } else {\n      startIndex = state.labelFromIndex;\n      endIndex = state.labelToIndex;\n    }\n\n    return isDataRange(_data.xLabels[startIndex], _data.xLabels[endIndex])\n      ? (\n        `${getLabelDate(_data.xLabels[startIndex])}` +\n        ' - ' +\n        `${getLabelDate(_data.xLabels[endIndex])}`\n      )\n      : getFullLabelDate(_data.xLabels[startIndex]);\n  }\n}\n\nexport { create };\n"]}